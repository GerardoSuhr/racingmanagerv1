{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gerar\\\\Documents\\\\Proyectos\\\\Racing Manager\\\\V1\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// src/App.js\nimport React, { useEffect, useState, useRef } from 'react';\nimport axios from 'axios';\nimport { generateCircuitSVG } from './utils/generateCircuitSVG';\nimport CircuitSVG from './components/CircuitSVG';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [circuit, setCircuit] = useState(null);\n  const [pathData, setPathData] = useState('');\n  const [startMarker, setStartMarker] = useState(null);\n  const [debugPoints, setDebugPoints] = useState([]);\n  const [bounds, setBounds] = useState(null);\n  const [selectedCircuitId, setSelectedCircuitId] = useState(1);\n  const [availableCircuits, setAvailableCircuits] = useState([]);\n  const [isRunning, setIsRunning] = useState(false);\n  const [carPosition, setCarPosition] = useState(null);\n  const [elapsedTime, setElapsedTime] = useState(0);\n  const [customSpeed, setCustomSpeed] = useState(100);\n  const [currentSpeed, setCurrentSpeed] = useState(0);\n  const [completed, setCompleted] = useState(false);\n  const intervalRef = useRef(null);\n  const carPath = useRef([]);\n  const speedPath = useRef([]);\n  const indexRef = useRef(0);\n  const totalLengthRef = useRef(0);\n  const [lengthReady, setLengthReady] = useState(false);\n  useEffect(() => {\n    axios.get(`http://localhost:3001/circuits/${selectedCircuitId}`).then(res => {\n      setCircuit(res.data);\n      const {\n        path,\n        startLine,\n        debugPoints,\n        bounds\n      } = generateCircuitSVG(res.data.sectors, res.data.mini_sectors);\n      setPathData(path);\n      setStartMarker(startLine);\n      setDebugPoints(debugPoints);\n      setBounds(bounds);\n      setCarPosition(null);\n      setElapsedTime(0);\n      setIsRunning(false);\n      setCompleted(false);\n      setLengthReady(false);\n      indexRef.current = 0;\n      if (intervalRef.current) clearInterval(intervalRef.current);\n      setTimeout(() => {\n        const svgPath = document.querySelector('path');\n        if (!svgPath) return;\n        const totalVisualLength = svgPath.getTotalLength();\n        totalLengthRef.current = totalVisualLength;\n        setLengthReady(true);\n        const points = [];\n        const speeds = [];\n        let currentLength = 0;\n        const totalMiniLength = res.data.mini_sectors.reduce((acc, ms) => acc + ms.length_cm, 0);\n        const orderedMiniSectors = res.data.sectors.flatMap(sector => sector.mini_sector_ids.map(id => res.data.mini_sectors.find(ms => ms.id === id))).filter(Boolean);\n        for (let ms of orderedMiniSectors) {\n          const visualLength = totalVisualLength * (ms.length_cm / totalMiniLength);\n          let speedFactor = 1;\n          if (ms.curvature_radius_cm > 0) {\n            const radius = ms.curvature_radius_cm / 100;\n            speedFactor = (radius - 100) / (300 - 100) * (0.99 - 0.5) + 0.5;\n            speedFactor = Math.min(0.99, Math.max(0.5, speedFactor));\n          }\n          const speedKmh = customSpeed * speedFactor;\n          const velocityMps = speedKmh * 1000 / 3600;\n          const intervalMs = 30;\n          const distancePerInterval = velocityMps * (intervalMs / 1000);\n          const steps = Math.max(1, Math.min(300, Math.floor(visualLength / distancePerInterval)));\n          for (let i = 0; i < steps; i++) {\n            const point = svgPath.getPointAtLength(currentLength + visualLength * i / steps);\n            points.push({\n              x: point.x,\n              y: point.y\n            });\n            speeds.push(speedKmh);\n          }\n          currentLength += visualLength;\n        }\n        carPath.current = points;\n        speedPath.current = speeds;\n      }, 100);\n    }).catch(console.error);\n  }, [selectedCircuitId, customSpeed]);\n  useEffect(() => {\n    axios.get('http://localhost:3001/circuits').then(res => setAvailableCircuits(res.data)).catch(console.error);\n  }, []);\n  const startSimulation = () => {\n    if (!carPath.current.length) return;\n    setIsRunning(true);\n    setCompleted(false);\n    const intervalMs = 30;\n    intervalRef.current = setInterval(() => {\n      const i = indexRef.current;\n      if (i >= carPath.current.length) {\n        clearInterval(intervalRef.current);\n        setIsRunning(false);\n        setCompleted(true);\n        return;\n      }\n      setCarPosition(carPath.current[i]);\n      setCurrentSpeed(speedPath.current[i] || 0);\n      setElapsedTime(prev => prev + intervalMs);\n      indexRef.current += 1;\n    }, intervalMs);\n  };\n  const stopSimulation = () => {\n    clearInterval(intervalRef.current);\n    setIsRunning(false);\n  };\n  const resetSimulation = () => {\n    clearInterval(intervalRef.current);\n    setIsRunning(false);\n    setElapsedTime(0);\n    setCarPosition(null);\n    setCompleted(false);\n    indexRef.current = 0;\n  };\n  const formatTime = ms => {\n    const totalSeconds = Math.floor(ms / 1000);\n    const hours = Math.floor(totalSeconds / 3600);\n    const minutes = Math.floor(totalSeconds % 3600 / 60);\n    const seconds = totalSeconds % 60;\n    return hours > 0 ? `${hours.toString().padStart(2, '0')}:${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}` : `${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`;\n  };\n  const formatDistance = meters => `${meters.toFixed(0)} m`;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '2rem'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Circuit Viewer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '1rem'\n      },\n      children: [availableCircuits.map(c => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setSelectedCircuitId(c.id),\n        disabled: selectedCircuitId === c.id,\n        style: {\n          marginRight: '0.5rem'\n        },\n        children: c.name\n      }, c.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: customSpeed,\n        onChange: e => setCustomSpeed(parseInt(e.target.value) || 0),\n        style: {\n          width: '80px',\n          marginLeft: '1rem'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this), \" km/h\", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startSimulation,\n        style: {\n          marginLeft: '1rem'\n        },\n        children: isRunning ? 'Resume' : 'Start'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: stopSimulation,\n        disabled: !isRunning,\n        style: {\n          marginLeft: '0.5rem'\n        },\n        children: \"Stop\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: resetSimulation,\n        style: {\n          marginLeft: '0.5rem'\n        },\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this), circuit && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flex: 1,\n          display: 'flex',\n          alignItems: 'flex-start'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [circuit.circuit.name, ' ', lengthReady && /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"\\u2014 Longitud total: \", formatDistance(totalLengthRef.current)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(CircuitSVG, {\n            pathData: pathData,\n            bounds: bounds,\n            startLine: startMarker,\n            debugPoints: debugPoints,\n            carPosition: carPosition\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            paddingLeft: '1rem',\n            fontSize: '0.9rem'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            style: {\n              marginTop: 0\n            },\n            children: \"Datos\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 15\n          }, this), isRunning && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Tiempo:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 22\n              }, this), \" \", formatTime(elapsedTime)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Velocidad:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 22\n              }, this), \" \", currentSpeed.toFixed(1), \" km/h\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Distancia:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 22\n              }, this), \" \", formatDistance(indexRef.current / carPath.current.length * totalLengthRef.current || 0)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true), completed && /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              color: 'green'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [\"\\xA1Vuelta completada en \", formatTime(elapsedTime), \"!\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 47\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 152,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"A+tRmtmL2E+SVuhUJHmnjFWNfJ0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","useRef","axios","generateCircuitSVG","CircuitSVG","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","circuit","setCircuit","pathData","setPathData","startMarker","setStartMarker","debugPoints","setDebugPoints","bounds","setBounds","selectedCircuitId","setSelectedCircuitId","availableCircuits","setAvailableCircuits","isRunning","setIsRunning","carPosition","setCarPosition","elapsedTime","setElapsedTime","customSpeed","setCustomSpeed","currentSpeed","setCurrentSpeed","completed","setCompleted","intervalRef","carPath","speedPath","indexRef","totalLengthRef","lengthReady","setLengthReady","get","then","res","data","path","startLine","sectors","mini_sectors","current","clearInterval","setTimeout","svgPath","document","querySelector","totalVisualLength","getTotalLength","points","speeds","currentLength","totalMiniLength","reduce","acc","ms","length_cm","orderedMiniSectors","flatMap","sector","mini_sector_ids","map","id","find","filter","Boolean","visualLength","speedFactor","curvature_radius_cm","radius","Math","min","max","speedKmh","velocityMps","intervalMs","distancePerInterval","steps","floor","i","point","getPointAtLength","push","x","y","catch","console","error","startSimulation","length","setInterval","prev","stopSimulation","resetSimulation","formatTime","totalSeconds","hours","minutes","seconds","toString","padStart","formatDistance","meters","toFixed","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","marginBottom","c","onClick","disabled","marginRight","name","type","value","onChange","e","parseInt","target","width","marginLeft","display","flex","alignItems","paddingLeft","fontSize","marginTop","color","_c","$RefreshReg$"],"sources":["C:/Users/gerar/Documents/Proyectos/Racing Manager/V1/frontend/src/App.js"],"sourcesContent":["// src/App.js\nimport React, { useEffect, useState, useRef } from 'react';\nimport axios from 'axios';\nimport { generateCircuitSVG } from './utils/generateCircuitSVG';\nimport CircuitSVG from './components/CircuitSVG';\n\nfunction App() {\n  const [circuit, setCircuit] = useState(null);\n  const [pathData, setPathData] = useState('');\n  const [startMarker, setStartMarker] = useState(null);\n  const [debugPoints, setDebugPoints] = useState([]);\n  const [bounds, setBounds] = useState(null);\n  const [selectedCircuitId, setSelectedCircuitId] = useState(1);\n  const [availableCircuits, setAvailableCircuits] = useState([]);\n\n  const [isRunning, setIsRunning] = useState(false);\n  const [carPosition, setCarPosition] = useState(null);\n  const [elapsedTime, setElapsedTime] = useState(0);\n  const [customSpeed, setCustomSpeed] = useState(100);\n  const [currentSpeed, setCurrentSpeed] = useState(0);\n  const [completed, setCompleted] = useState(false);\n  const intervalRef = useRef(null);\n  const carPath = useRef([]);\n  const speedPath = useRef([]);\n  const indexRef = useRef(0);\n  const totalLengthRef = useRef(0);\n  const [lengthReady, setLengthReady] = useState(false);\n\n  useEffect(() => {\n    axios.get(`http://localhost:3001/circuits/${selectedCircuitId}`)\n      .then(res => {\n        setCircuit(res.data);\n        const { path, startLine, debugPoints, bounds } = generateCircuitSVG(\n          res.data.sectors,\n          res.data.mini_sectors\n        );\n        setPathData(path);\n        setStartMarker(startLine);\n        setDebugPoints(debugPoints);\n        setBounds(bounds);\n        setCarPosition(null);\n        setElapsedTime(0);\n        setIsRunning(false);\n        setCompleted(false);\n        setLengthReady(false);\n        indexRef.current = 0;\n        if (intervalRef.current) clearInterval(intervalRef.current);\n\n        setTimeout(() => {\n          const svgPath = document.querySelector('path');\n          if (!svgPath) return;\n          const totalVisualLength = svgPath.getTotalLength();\n          totalLengthRef.current = totalVisualLength;\n          setLengthReady(true);\n\n          const points = [];\n          const speeds = [];\n          let currentLength = 0;\n\n          const totalMiniLength = res.data.mini_sectors.reduce((acc, ms) => acc + ms.length_cm, 0);\n\n          const orderedMiniSectors = res.data.sectors\n            .flatMap(sector => sector.mini_sector_ids.map(id => res.data.mini_sectors.find(ms => ms.id === id)))\n            .filter(Boolean);\n\n          for (let ms of orderedMiniSectors) {\n            const visualLength = totalVisualLength * (ms.length_cm / totalMiniLength);\n\n            let speedFactor = 1;\n            if (ms.curvature_radius_cm > 0) {\n              const radius = ms.curvature_radius_cm / 100;\n              speedFactor = (radius - 100) / (300 - 100) * (0.99 - 0.5) + 0.5;\n              speedFactor = Math.min(0.99, Math.max(0.5, speedFactor));\n            }\n\n            const speedKmh = customSpeed * speedFactor;\n            const velocityMps = speedKmh * 1000 / 3600;\n            const intervalMs = 30;\n            const distancePerInterval = velocityMps * (intervalMs / 1000);\n            const steps = Math.max(1, Math.min(300, Math.floor(visualLength / distancePerInterval)));\n\n            for (let i = 0; i < steps; i++) {\n              const point = svgPath.getPointAtLength(currentLength + (visualLength * i / steps));\n              points.push({ x: point.x, y: point.y });\n              speeds.push(speedKmh);\n            }\n\n            currentLength += visualLength;\n          }\n\n          carPath.current = points;\n          speedPath.current = speeds;\n        }, 100);\n      })\n      .catch(console.error);\n  }, [selectedCircuitId, customSpeed]);\n\n  useEffect(() => {\n    axios.get('http://localhost:3001/circuits')\n      .then(res => setAvailableCircuits(res.data))\n      .catch(console.error);\n  }, []);\n\n  const startSimulation = () => {\n    if (!carPath.current.length) return;\n\n    setIsRunning(true);\n    setCompleted(false);\n    const intervalMs = 30;\n    intervalRef.current = setInterval(() => {\n      const i = indexRef.current;\n      if (i >= carPath.current.length) {\n        clearInterval(intervalRef.current);\n        setIsRunning(false);\n        setCompleted(true);\n        return;\n      }\n      setCarPosition(carPath.current[i]);\n      setCurrentSpeed(speedPath.current[i] || 0);\n      setElapsedTime(prev => prev + intervalMs);\n      indexRef.current += 1;\n    }, intervalMs);\n  };\n\n  const stopSimulation = () => {\n    clearInterval(intervalRef.current);\n    setIsRunning(false);\n  };\n\n  const resetSimulation = () => {\n    clearInterval(intervalRef.current);\n    setIsRunning(false);\n    setElapsedTime(0);\n    setCarPosition(null);\n    setCompleted(false);\n    indexRef.current = 0;\n  };\n\n  const formatTime = (ms) => {\n    const totalSeconds = Math.floor(ms / 1000);\n    const hours = Math.floor(totalSeconds / 3600);\n    const minutes = Math.floor((totalSeconds % 3600) / 60);\n    const seconds = totalSeconds % 60;\n    return hours > 0\n      ? `${hours.toString().padStart(2, '0')}:${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`\n      : `${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`;\n  };\n\n  const formatDistance = (meters) => `${meters.toFixed(0)} m`;\n\n  return (\n    <div style={{ padding: '2rem' }}>\n      <h1>Circuit Viewer</h1>\n\n      <div style={{ marginBottom: '1rem' }}>\n        {availableCircuits.map(c => (\n          <button\n            key={c.id}\n            onClick={() => setSelectedCircuitId(c.id)}\n            disabled={selectedCircuitId === c.id}\n            style={{ marginRight: '0.5rem' }}\n          >\n            {c.name}\n          </button>\n        ))}\n        <input\n          type=\"number\"\n          value={customSpeed}\n          onChange={(e) => setCustomSpeed(parseInt(e.target.value) || 0)}\n          style={{ width: '80px', marginLeft: '1rem' }}\n        /> km/h\n        <button onClick={startSimulation} style={{ marginLeft: '1rem' }}>\n          {isRunning ? 'Resume' : 'Start'}\n        </button>\n        <button onClick={stopSimulation} disabled={!isRunning} style={{ marginLeft: '0.5rem' }}>\n          Stop\n        </button>\n        <button onClick={resetSimulation} style={{ marginLeft: '0.5rem' }}>\n          Reset\n        </button>\n      </div>\n\n      {circuit && (\n        <div style={{ display: 'flex' }}>\n          <div style={{ flex: 1, display: 'flex', alignItems: 'flex-start' }}>\n            <div>\n              <h2>\n                {circuit.circuit.name}{' '}\n                {lengthReady && (\n                  <span>— Longitud total: {formatDistance(totalLengthRef.current)}</span>\n                )}\n              </h2>\n              <CircuitSVG\n                pathData={pathData}\n                bounds={bounds}\n                startLine={startMarker}\n                debugPoints={debugPoints}\n                carPosition={carPosition}\n              />\n            </div>\n            <div style={{ paddingLeft: '1rem', fontSize: '0.9rem' }}>\n              <h3 style={{ marginTop: 0 }}>Datos</h3>\n              {isRunning && (\n                <>\n                  <p><strong>Tiempo:</strong> {formatTime(elapsedTime)}</p>\n                  <p><strong>Velocidad:</strong> {currentSpeed.toFixed(1)} km/h</p>\n                  <p><strong>Distancia:</strong> {formatDistance(\n                    (indexRef.current / carPath.current.length) * totalLengthRef.current || 0\n                  )}</p>\n                </>\n              )}\n              {completed && (\n                <p style={{ color: 'green' }}><strong>¡Vuelta completada en {formatTime(elapsedTime)}!</strong></p>\n              )}\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}