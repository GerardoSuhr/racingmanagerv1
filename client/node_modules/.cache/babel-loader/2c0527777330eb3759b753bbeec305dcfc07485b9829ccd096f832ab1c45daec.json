{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gerar\\\\Documents\\\\Proyectos\\\\Racing Manager\\\\V1\\\\frontend\\\\src\\\\components\\\\CircuitSVG.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CircuitSVG({\n  pathData,\n  bounds,\n  startLine,\n  carPosition,\n  sectorEndPoints\n}) {\n  const viewWidth = 1000;\n  const viewHeight = 600;\n  const padding = 150;\n  if (!pathData || !bounds) return null;\n  const contentWidth = bounds.width;\n  const contentHeight = bounds.height;\n  const scale = Math.min((viewWidth - 2 * padding) / contentWidth, (viewHeight - 2 * padding) / contentHeight);\n\n  // Dibuja una línea perpendicular centrada en (x, y)\n  const drawMarkerLine = (x, y, angleDeg, length = 20, stroke = \"black\", width = 4) => {\n    const rad = angleDeg * Math.PI / 180;\n    const dx = length / 2 * Math.cos(rad + Math.PI / 2);\n    const dy = length / 2 * Math.sin(rad + Math.PI / 2);\n    return /*#__PURE__*/_jsxDEV(\"line\", {\n      x1: x - dx,\n      y1: y - dy,\n      x2: x + dx,\n      y2: y + dy,\n      stroke: stroke,\n      strokeWidth: width\n    }, `${x}-${y}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    width: viewWidth,\n    height: viewHeight,\n    viewBox: `0 0 ${viewWidth} ${viewHeight}`,\n    style: {\n      border: '1px solid #ccc'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"g\", {\n      transform: `translate(${padding}, ${viewHeight - padding}) scale(${scale}, -${scale})`,\n      children: [/*#__PURE__*/_jsxDEV(\"path\", {\n        d: pathData,\n        stroke: \"gray\",\n        strokeWidth: 15,\n        fill: \"none\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), startLine && /*#__PURE__*/_jsxDEV(\"line\", {\n        x1: startLine.x1,\n        y1: startLine.y1,\n        x2: startLine.x2,\n        y2: startLine.y2,\n        stroke: \"black\",\n        strokeWidth: 6\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this), sectorEndPoints === null || sectorEndPoints === void 0 ? void 0 : sectorEndPoints.map((p, i) => drawMarkerLine(p.x, p.y, 0, 10, 'black', 3)), carPosition && /*#__PURE__*/_jsxDEV(\"circle\", {\n        cx: carPosition.x,\n        cy: carPosition.y,\n        r: \"15\",\n        fill: \"blue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_c = CircuitSVG;\nvar _c;\n$RefreshReg$(_c, \"CircuitSVG\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","CircuitSVG","pathData","bounds","startLine","carPosition","sectorEndPoints","viewWidth","viewHeight","padding","contentWidth","width","contentHeight","height","scale","Math","min","drawMarkerLine","x","y","angleDeg","length","stroke","rad","PI","dx","cos","dy","sin","x1","y1","x2","y2","strokeWidth","fileName","_jsxFileName","lineNumber","columnNumber","viewBox","style","border","children","transform","d","fill","map","p","i","cx","cy","r","_c","$RefreshReg$"],"sources":["C:/Users/gerar/Documents/Proyectos/Racing Manager/V1/frontend/src/components/CircuitSVG.js"],"sourcesContent":["import React from 'react';\r\n\r\nexport default function CircuitSVG({ pathData, bounds, startLine, carPosition, sectorEndPoints }) {\r\n  const viewWidth = 1000;\r\n  const viewHeight = 600;\r\n  const padding = 150;\r\n\r\n  if (!pathData || !bounds) return null;\r\n\r\n  const contentWidth = bounds.width;\r\n  const contentHeight = bounds.height;\r\n\r\n  const scale = Math.min(\r\n    (viewWidth - 2 * padding) / contentWidth,\r\n    (viewHeight - 2 * padding) / contentHeight\r\n  );\r\n\r\n  // Dibuja una línea perpendicular centrada en (x, y)\r\n  const drawMarkerLine = (x, y, angleDeg, length = 20, stroke = \"black\", width = 4) => {\r\n    const rad = (angleDeg * Math.PI) / 180;\r\n    const dx = (length / 2) * Math.cos(rad + Math.PI / 2);\r\n    const dy = (length / 2) * Math.sin(rad + Math.PI / 2);\r\n    return (\r\n      <line\r\n        key={`${x}-${y}`}\r\n        x1={x - dx}\r\n        y1={y - dy}\r\n        x2={x + dx}\r\n        y2={y + dy}\r\n        stroke={stroke}\r\n        strokeWidth={width}\r\n      />\r\n    );\r\n  };\r\n\r\n  return (\r\n    <svg\r\n      width={viewWidth}\r\n      height={viewHeight}\r\n      viewBox={`0 0 ${viewWidth} ${viewHeight}`}\r\n      style={{ border: '1px solid #ccc' }}\r\n    >\r\n      <g transform={`translate(${padding}, ${viewHeight - padding}) scale(${scale}, -${scale})`}>\r\n        {/* Circuito */}\r\n        <path d={pathData} stroke=\"gray\" strokeWidth={15} fill=\"none\" />\r\n\r\n        {/* Línea de meta visible y más gruesa */}\r\n        {startLine && (\r\n          <line\r\n            x1={startLine.x1}\r\n            y1={startLine.y1}\r\n            x2={startLine.x2}\r\n            y2={startLine.y2}\r\n            stroke=\"black\"\r\n            strokeWidth={6}\r\n          />\r\n        )}\r\n\r\n        {/* Líneas de fin de sector */}\r\n        {sectorEndPoints?.map((p, i) =>\r\n          drawMarkerLine(p.x, p.y, 0, 10, 'black', 3)\r\n        )}\r\n\r\n        {/* Auto */}\r\n        {carPosition && (\r\n          <circle cx={carPosition.x} cy={carPosition.y} r=\"15\" fill=\"blue\" />\r\n        )}\r\n      </g>\r\n    </svg>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}