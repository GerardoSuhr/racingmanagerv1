{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gerar\\\\Documents\\\\Proyectos\\\\Racing Manager\\\\V1\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { generateCircuitSVG } from './utils/generateCircuitSVG';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SCALE = 0.01; // 1 cm = 0.01 px => 1 m = 1 px aprox\n\nfunction App() {\n  _s();\n  const [circuit, setCircuit] = useState(null);\n  const [pathData, setPathData] = useState('');\n  const [startMarker, setStartMarker] = useState(null);\n  const [selectedCircuitId, setSelectedCircuitId] = useState(1);\n  useEffect(() => {\n    axios.get(`http://localhost:3001/circuit/${selectedCircuitId}`).then(res => {\n      setCircuit(res.data);\n      const {\n        path,\n        startLine\n      } = generateCircuitSVG(res.data.sectors, res.data.mini_sectors);\n      setPathData(path);\n      setStartMarker(startLine);\n    }).catch(console.error);\n  }, [selectedCircuitId]);\n  const generateCircuitSVG = (sectors, allMiniSectors) => {\n    if (!sectors || sectors.length === 0) return {\n      path: '',\n      startLine: null\n    };\n    const firstSector = sectors[0];\n    const firstMiniSectorId = firstSector.mini_sector_ids[0];\n    const firstMini = allMiniSectors.find(ms => ms.id === firstMiniSectorId);\n    let x = 300;\n    let y = 200;\n    let angle = 0;\n    let d = `M ${x} ${y}`;\n    let startLine = null;\n    for (let sector of allMiniSectors) {\n      const isCurve = sector.curvature_radius_cm > 0;\n      if (sector.id === firstMini.id) {\n        startLine = {\n          x,\n          y,\n          angle\n        };\n      }\n      if (!isCurve) {\n        var _sector$direction;\n        const length = sector.length_cm * SCALE;\n        const dx = Math.cos(angle * Math.PI / 180) * length;\n        const dy = Math.sin(angle * Math.PI / 180) * length;\n        x += dx;\n        y += dy;\n        d += ` L ${x} ${y}`;\n        let debugPoints = [{\n          x,\n          y\n        }];\n        angle = (_sector$direction = sector.direction) !== null && _sector$direction !== void 0 ? _sector$direction : angle;\n      } else {\n        var _sector$arc_angle_deg;\n        const radius = sector.curvature_radius_cm * SCALE;\n        const sweepFlag = sector.curve_direction === 'clockwise' ? 1 : 0;\n        const arcAngleDeg = (_sector$arc_angle_deg = sector.arc_angle_deg) !== null && _sector$arc_angle_deg !== void 0 ? _sector$arc_angle_deg : 180;\n        const arcAngleRad = arcAngleDeg * Math.PI / 180;\n        const largeArcFlag = arcAngleDeg > 180 ? 1 : 0;\n\n        // Calcular punto final del arco\n        const endAngle = angle + (sweepFlag === 1 ? arcAngleDeg : -arcAngleDeg);\n        const arcLength = arcAngleRad * radius;\n        const dx = Math.cos(endAngle * Math.PI / 180) * 0.001; // pequeño ajuste\n        const dy = Math.sin(endAngle * Math.PI / 180) * 0.001;\n        const arcEndX = x + radius * 2 * Math.cos((angle + (sweepFlag === 1 ? 90 : -90)) * Math.PI / 180);\n        const arcEndY = y + radius * 2 * Math.sin((angle + (sweepFlag === 1 ? 90 : -90)) * Math.PI / 180);\n        const endX = x + radius * 2 * Math.sin(arcAngleRad / 2) * Math.cos((angle + (sweepFlag === 1 ? arcAngleDeg : -arcAngleDeg)) * Math.PI / 180);\n        const endY = y + radius * 2 * Math.sin(arcAngleRad / 2) * Math.sin((angle + (sweepFlag === 1 ? arcAngleDeg : -arcAngleDeg)) * Math.PI / 180);\n        const thetaRad = angle * Math.PI / 180;\n        const endX2 = x + radius * 2 * Math.cos(thetaRad + (sweepFlag === 1 ? arcAngleRad : -arcAngleRad));\n        const endY2 = y + radius * 2 * Math.sin(thetaRad + (sweepFlag === 1 ? arcAngleRad : -arcAngleRad));\n\n        // La mejor estimación:\n        const endX3 = x + radius * (Math.cos(thetaRad) - Math.cos(thetaRad + (sweepFlag === 1 ? arcAngleRad : -arcAngleRad)));\n        const endY3 = y + radius * (Math.sin(thetaRad) - Math.sin(thetaRad + (sweepFlag === 1 ? arcAngleRad : -arcAngleRad)));\n        d += ` A ${radius} ${radius} 0 ${largeArcFlag} ${sweepFlag} ${endX3} ${endY3}`;\n        x = endX3;\n        y = endY3;\n        angle = (angle + (sweepFlag === 1 ? arcAngleDeg : -arcAngleDeg) + 360) % 360;\n      }\n    }\n    return {\n      path: d,\n      startLine\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '2rem'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Circuit Viewer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), circuit ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '1rem'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setSelectedCircuitId(1),\n          disabled: selectedCircuitId === 1,\n          children: \"Circuito 1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setSelectedCircuitId(2),\n          disabled: selectedCircuitId === 2,\n          style: {\n            marginLeft: '1rem'\n          },\n          children: \"Circuito 2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 3\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: circuit.circuit.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n        viewBox: \"0 0 1600 800\",\n        width: \"100%\",\n        height: \"600\",\n        style: {\n          border: '1px solid black',\n          marginBottom: '1rem'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"path\", {\n          d: pathData,\n          stroke: \"#555\",\n          strokeWidth: \"5\",\n          fill: \"none\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 3\n        }, this), startMarker && /*#__PURE__*/_jsxDEV(\"line\", {\n          x1: startMarker.x + 10 * Math.cos((startMarker.angle + 90) * Math.PI / 180),\n          y1: startMarker.y + 10 * Math.sin((startMarker.angle + 90) * Math.PI / 180),\n          x2: startMarker.x + 10 * Math.cos((startMarker.angle - 90) * Math.PI / 180),\n          y2: startMarker.y + 10 * Math.sin((startMarker.angle - 90) * Math.PI / 180),\n          stroke: \"black\",\n          strokeWidth: \"4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Mini Sectores\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: circuit.mini_sectors.map(ms => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: ms.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 17\n          }, this), \": \", ms.length_cm / 100, \" m,\", ms.curvature_radius_cm > 0 ? ` curva (${ms.curve_direction}, radio ${ms.curvature_radius_cm / 100} m)` : ` recta (dirección ${ms.direction}°)`]\n        }, ms.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Sectores\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: circuit.sectors.map(s => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: s.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 17\n          }, this), \": Mini sectores \", s.mini_sector_ids.join(', ')]\n        }, s.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading circuit...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"ysEkOF6NUVwglyL/2FX2HM4Pk0E=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","axios","generateCircuitSVG","jsxDEV","_jsxDEV","Fragment","_Fragment","SCALE","App","_s","circuit","setCircuit","pathData","setPathData","startMarker","setStartMarker","selectedCircuitId","setSelectedCircuitId","get","then","res","data","path","startLine","sectors","mini_sectors","catch","console","error","allMiniSectors","length","firstSector","firstMiniSectorId","mini_sector_ids","firstMini","find","ms","id","x","y","angle","d","sector","isCurve","curvature_radius_cm","_sector$direction","length_cm","dx","Math","cos","PI","dy","sin","debugPoints","direction","_sector$arc_angle_deg","radius","sweepFlag","curve_direction","arcAngleDeg","arc_angle_deg","arcAngleRad","largeArcFlag","endAngle","arcLength","arcEndX","arcEndY","endX","endY","thetaRad","endX2","endY2","endX3","endY3","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","marginBottom","onClick","disabled","marginLeft","name","viewBox","width","height","border","stroke","strokeWidth","fill","x1","y1","x2","y2","map","s","join","_c","$RefreshReg$"],"sources":["C:/Users/gerar/Documents/Proyectos/Racing Manager/V1/frontend/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { generateCircuitSVG } from './utils/generateCircuitSVG';\n\nconst SCALE = 0.01; // 1 cm = 0.01 px => 1 m = 1 px aprox\n\nfunction App() {\n  const [circuit, setCircuit] = useState(null);\n  const [pathData, setPathData] = useState('');\n  const [startMarker, setStartMarker] = useState(null);\n  const [selectedCircuitId, setSelectedCircuitId] = useState(1);\n\n  useEffect(() => {\n    axios.get(`http://localhost:3001/circuit/${selectedCircuitId}`)\n      .then(res => {\n        setCircuit(res.data);\n        const { path, startLine } = generateCircuitSVG(res.data.sectors, res.data.mini_sectors);\n        setPathData(path);\n        setStartMarker(startLine);\n      })\n      .catch(console.error);\n  }, [selectedCircuitId]);\n\n  const generateCircuitSVG = (sectors, allMiniSectors) => {\n    if (!sectors || sectors.length === 0) return { path: '', startLine: null };\n  \n    const firstSector = sectors[0];\n    const firstMiniSectorId = firstSector.mini_sector_ids[0];\n    const firstMini = allMiniSectors.find(ms => ms.id === firstMiniSectorId);\n  \n    let x = 300;\n    let y = 200;\n    let angle = 0;\n    let d = `M ${x} ${y}`;\n  \n    let startLine = null;\n  \n    for (let sector of allMiniSectors) {\n      const isCurve = sector.curvature_radius_cm > 0;\n  \n      if (sector.id === firstMini.id) {\n        startLine = { x, y, angle };\n      }\n  \n      if (!isCurve) {\n        const length = sector.length_cm * SCALE;\n        const dx = Math.cos(angle * Math.PI / 180) * length;\n        const dy = Math.sin(angle * Math.PI / 180) * length;\n  \n        x += dx;\n        y += dy;\n        d += ` L ${x} ${y}`;\n        let debugPoints = [{ x, y }];\n        \n        angle = sector.direction ?? angle;\n      } else {\n        const radius = sector.curvature_radius_cm * SCALE;\n        const sweepFlag = sector.curve_direction === 'clockwise' ? 1 : 0;\n        const arcAngleDeg = sector.arc_angle_deg ?? 180;\n        const arcAngleRad = arcAngleDeg * Math.PI / 180;\n  \n        const largeArcFlag = arcAngleDeg > 180 ? 1 : 0;\n  \n        // Calcular punto final del arco\n        const endAngle = angle + (sweepFlag === 1 ? arcAngleDeg : -arcAngleDeg);\n        const arcLength = arcAngleRad * radius;\n        const dx = Math.cos(endAngle * Math.PI / 180) * 0.001; // pequeño ajuste\n        const dy = Math.sin(endAngle * Math.PI / 180) * 0.001;\n  \n        const arcEndX = x + radius * 2 * Math.cos((angle + (sweepFlag === 1 ? 90 : -90)) * Math.PI / 180);\n        const arcEndY = y + radius * 2 * Math.sin((angle + (sweepFlag === 1 ? 90 : -90)) * Math.PI / 180);\n  \n        const endX = x + radius * 2 * Math.sin(arcAngleRad / 2) * Math.cos((angle + (sweepFlag === 1 ? arcAngleDeg : -arcAngleDeg)) * Math.PI / 180);\n        const endY = y + radius * 2 * Math.sin(arcAngleRad / 2) * Math.sin((angle + (sweepFlag === 1 ? arcAngleDeg : -arcAngleDeg)) * Math.PI / 180);\n  \n        const thetaRad = angle * Math.PI / 180;\n        const endX2 = x + radius * 2 * Math.cos(thetaRad + (sweepFlag === 1 ? arcAngleRad : -arcAngleRad));\n        const endY2 = y + radius * 2 * Math.sin(thetaRad + (sweepFlag === 1 ? arcAngleRad : -arcAngleRad));\n  \n        // La mejor estimación:\n        const endX3 = x + radius * (Math.cos(thetaRad) - Math.cos(thetaRad + (sweepFlag === 1 ? arcAngleRad : -arcAngleRad)));\n        const endY3 = y + radius * (Math.sin(thetaRad) - Math.sin(thetaRad + (sweepFlag === 1 ? arcAngleRad : -arcAngleRad)));\n  \n        d += ` A ${radius} ${radius} 0 ${largeArcFlag} ${sweepFlag} ${endX3} ${endY3}`;\n  \n        x = endX3;\n        y = endY3;\n        angle = (angle + (sweepFlag === 1 ? arcAngleDeg : -arcAngleDeg) + 360) % 360;\n      }\n    }\n  \n    return { path: d, startLine };\n  };\n\n  return (\n    <div style={{ padding: '2rem' }}>\n      <h1>Circuit Viewer</h1>\n\n      {circuit ? (\n        <>\n        <div style={{ marginBottom: '1rem' }}>\n  <button onClick={() => setSelectedCircuitId(1)} disabled={selectedCircuitId === 1}>\n    Circuito 1\n  </button>\n  <button onClick={() => setSelectedCircuitId(2)} disabled={selectedCircuitId === 2} style={{ marginLeft: '1rem' }}>\n    Circuito 2\n  </button>\n</div>\n          <h2>{circuit.circuit.name}</h2>\n          <svg\n  viewBox=\"0 0 1600 800\"\n  width=\"100%\"\n  height=\"600\"\n  style={{ border: '1px solid black', marginBottom: '1rem' }}\n>\n  {/* Circuito gris más grueso */}\n  <path d={pathData} stroke=\"#555\" strokeWidth=\"5\" fill=\"none\" />\n\n  {/* Línea de meta más larga y gruesa */}\n  {startMarker && (\n    <line\n      x1={startMarker.x + 10 * Math.cos((startMarker.angle + 90) * Math.PI / 180)}\n      y1={startMarker.y + 10 * Math.sin((startMarker.angle + 90) * Math.PI / 180)}\n      x2={startMarker.x + 10 * Math.cos((startMarker.angle - 90) * Math.PI / 180)}\n      y2={startMarker.y + 10 * Math.sin((startMarker.angle - 90) * Math.PI / 180)}\n      stroke=\"black\"\n      strokeWidth=\"4\"\n    />\n  )}\n</svg>\n\n          <h3>Mini Sectores</h3>\n          <ul>\n            {circuit.mini_sectors.map(ms => (\n              <li key={ms.id}>\n                <strong>{ms.name}</strong>: {ms.length_cm / 100} m, \n                {ms.curvature_radius_cm > 0\n                  ? ` curva (${ms.curve_direction}, radio ${ms.curvature_radius_cm / 100} m)`\n                  : ` recta (dirección ${ms.direction}°)`\n                }\n              </li>\n            ))}\n          </ul>\n\n          <h3>Sectores</h3>\n          <ul>\n            {circuit.sectors.map(s => (\n              <li key={s.id}>\n                <strong>{s.name}</strong>: Mini sectores {s.mini_sector_ids.join(', ')}\n              </li>\n            ))}\n          </ul>\n        </>\n      ) : (\n        <p>Loading circuit...</p>\n      )}\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}