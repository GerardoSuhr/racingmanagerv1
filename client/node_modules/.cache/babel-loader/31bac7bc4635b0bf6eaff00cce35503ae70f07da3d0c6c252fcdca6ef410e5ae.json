{"ast":null,"code":"var _s = $RefreshSig$();\n// src/App.js\nimport React, { useEffect, useState, useRef } from 'react';\nimport axios from 'axios';\nimport { generateCircuitSVG } from './utils/generateCircuitSVG';\nimport CircuitSVG from './components/CircuitSVG';\nfunction App() {\n  _s();\n  const [circuit, setCircuit] = useState(null);\n  const [pathData, setPathData] = useState('');\n  const [startMarker, setStartMarker] = useState(null);\n  const [debugPoints, setDebugPoints] = useState([]);\n  const [bounds, setBounds] = useState(null);\n  const [selectedCircuitId, setSelectedCircuitId] = useState(1);\n  const [availableCircuits, setAvailableCircuits] = useState([]);\n  const [isRunning, setIsRunning] = useState(false);\n  const [carPosition, setCarPosition] = useState(null);\n  const [elapsedTime, setElapsedTime] = useState(0);\n  const [customSpeed, setCustomSpeed] = useState(100);\n  const [currentSpeed, setCurrentSpeed] = useState(0);\n  const [completed, setCompleted] = useState(false);\n  const intervalRef = useRef(null);\n  const carPath = useRef([]);\n  const speedPath = useRef([]);\n  const indexRef = useRef(0);\n  const totalLengthRef = useRef(0);\n  const [lengthReady, setLengthReady] = useState(false);\n  useEffect(() => {\n    axios.get(`http://localhost:3001/circuits/${selectedCircuitId}`).then(res => {\n      setCircuit(res.data);\n      const {\n        path,\n        startLine,\n        debugPoints,\n        bounds\n      } = generateCircuitSVG(res.data.sectors, res.data.mini_sectors);\n      setPathData(path);\n      setStartMarker(startLine);\n      setDebugPoints(debugPoints);\n      setBounds(bounds);\n      setCarPosition(null);\n      setElapsedTime(0);\n      setIsRunning(false);\n      setCompleted(false);\n      setLengthReady(false);\n      indexRef.current = 0;\n      if (intervalRef.current) clearInterval(intervalRef.current);\n      setTimeout(() => {\n        const svgPath = document.querySelector('path');\n        if (!svgPath) return;\n        const totalVisualLength = svgPath.getTotalLength();\n        totalLengthRef.current = totalVisualLength;\n        setLengthReady(true);\n        const points = [];\n        const speeds = [];\n        let currentLength = 0;\n        const totalMiniLength = res.data.mini_sectors.reduce((acc, ms) => acc + ms.length_cm, 0);\n        for (let ms of res.data.mini_sectors) {\n          const visualLength = totalVisualLength * (ms.length_cm / totalMiniLength);\n          let speedFactor = 1;\n          if (ms.curvature_radius_cm > 0) {\n            const radius = ms.curvature_radius_cm / 100;\n            speedFactor = (radius - 100) / (300 - 100) * (0.99 - 0.5) + 0.5;\n            speedFactor = Math.min(0.99, Math.max(0.5, speedFactor));\n          }\n          const speedKmh = customSpeed * speedFactor;\n          const velocityMps = speedKmh * 1000 / 3600;\n          const intervalMs = 30;\n          const distancePerInterval = velocityMps * (intervalMs / 1000);\n          const steps = Math.max(1, Math.min(300, Math.floor(visualLength / distancePerInterval)));\n          for (let i = 0; i < steps; i++) {\n            const point = svgPath.getPointAtLength(currentLength + visualLength * i / steps);\n            points.push({\n              x: point.x,\n              y: point.y\n            });\n            speeds.push(speedKmh);\n          }\n          currentLength += visualLength;\n        }\n        carPath.current = points;\n        speedPath.current = speeds;\n      }, 100);\n    }).catch(console.error);\n  }, [selectedCircuitId, customSpeed]);\n\n  // ... (rest of the code remains unchanged)\n}\n_s(App, \"Jm08DiiiFErS8wZ4wO+szuvFVkY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","useRef","axios","generateCircuitSVG","CircuitSVG","App","_s","circuit","setCircuit","pathData","setPathData","startMarker","setStartMarker","debugPoints","setDebugPoints","bounds","setBounds","selectedCircuitId","setSelectedCircuitId","availableCircuits","setAvailableCircuits","isRunning","setIsRunning","carPosition","setCarPosition","elapsedTime","setElapsedTime","customSpeed","setCustomSpeed","currentSpeed","setCurrentSpeed","completed","setCompleted","intervalRef","carPath","speedPath","indexRef","totalLengthRef","lengthReady","setLengthReady","get","then","res","data","path","startLine","sectors","mini_sectors","current","clearInterval","setTimeout","svgPath","document","querySelector","totalVisualLength","getTotalLength","points","speeds","currentLength","totalMiniLength","reduce","acc","ms","length_cm","visualLength","speedFactor","curvature_radius_cm","radius","Math","min","max","speedKmh","velocityMps","intervalMs","distancePerInterval","steps","floor","i","point","getPointAtLength","push","x","y","catch","console","error","_c","$RefreshReg$"],"sources":["C:/Users/gerar/Documents/Proyectos/Racing Manager/V1/frontend/src/App.js"],"sourcesContent":["// src/App.js\nimport React, { useEffect, useState, useRef } from 'react';\nimport axios from 'axios';\nimport { generateCircuitSVG } from './utils/generateCircuitSVG';\nimport CircuitSVG from './components/CircuitSVG';\n\nfunction App() {\n  const [circuit, setCircuit] = useState(null);\n  const [pathData, setPathData] = useState('');\n  const [startMarker, setStartMarker] = useState(null);\n  const [debugPoints, setDebugPoints] = useState([]);\n  const [bounds, setBounds] = useState(null);\n  const [selectedCircuitId, setSelectedCircuitId] = useState(1);\n  const [availableCircuits, setAvailableCircuits] = useState([]);\n\n  const [isRunning, setIsRunning] = useState(false);\n  const [carPosition, setCarPosition] = useState(null);\n  const [elapsedTime, setElapsedTime] = useState(0);\n  const [customSpeed, setCustomSpeed] = useState(100);\n  const [currentSpeed, setCurrentSpeed] = useState(0);\n  const [completed, setCompleted] = useState(false);\n  const intervalRef = useRef(null);\n  const carPath = useRef([]);\n  const speedPath = useRef([]);\n  const indexRef = useRef(0);\n  const totalLengthRef = useRef(0);\n  const [lengthReady, setLengthReady] = useState(false);\n\n  useEffect(() => {\n    axios.get(`http://localhost:3001/circuits/${selectedCircuitId}`)\n      .then(res => {\n        setCircuit(res.data);\n        const { path, startLine, debugPoints, bounds } = generateCircuitSVG(\n          res.data.sectors,\n          res.data.mini_sectors\n        );\n        setPathData(path);\n        setStartMarker(startLine);\n        setDebugPoints(debugPoints);\n        setBounds(bounds);\n        setCarPosition(null);\n        setElapsedTime(0);\n        setIsRunning(false);\n        setCompleted(false);\n        setLengthReady(false);\n        indexRef.current = 0;\n        if (intervalRef.current) clearInterval(intervalRef.current);\n\n        setTimeout(() => {\n          const svgPath = document.querySelector('path');\n          if (!svgPath) return;\n          const totalVisualLength = svgPath.getTotalLength();\n          totalLengthRef.current = totalVisualLength;\n          setLengthReady(true);\n\n          const points = [];\n          const speeds = [];\n          let currentLength = 0;\n\n          const totalMiniLength = res.data.mini_sectors.reduce((acc, ms) => acc + ms.length_cm, 0);\n\n          for (let ms of res.data.mini_sectors) {\n            const visualLength = totalVisualLength * (ms.length_cm / totalMiniLength);\n\n            let speedFactor = 1;\n            if (ms.curvature_radius_cm > 0) {\n              const radius = ms.curvature_radius_cm / 100;\n              speedFactor = (radius - 100) / (300 - 100) * (0.99 - 0.5) + 0.5;\n              speedFactor = Math.min(0.99, Math.max(0.5, speedFactor));\n            }\n\n            const speedKmh = customSpeed * speedFactor;\n            const velocityMps = speedKmh * 1000 / 3600;\n            const intervalMs = 30;\n            const distancePerInterval = velocityMps * (intervalMs / 1000);\n            const steps = Math.max(1, Math.min(300, Math.floor(visualLength / distancePerInterval)));\n\n            for (let i = 0; i < steps; i++) {\n              const point = svgPath.getPointAtLength(currentLength + (visualLength * i / steps));\n              points.push({ x: point.x, y: point.y });\n              speeds.push(speedKmh);\n            }\n\n            currentLength += visualLength;\n          }\n\n          carPath.current = points;\n          speedPath.current = speeds;\n        }, 100);\n      })\n      .catch(console.error);\n  }, [selectedCircuitId, customSpeed]);\n\n  // ... (rest of the code remains unchanged)\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}