{"ast":null,"code":"import React from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function CircuitSVG(_ref){let{pathData,bounds,startLine,carPosition,sectorStartPoints,carPoints}=_ref;const viewWidth=1000;const viewHeight=600;const padding=150;if(!pathData||!bounds)return null;const contentWidth=bounds.width;const contentHeight=bounds.height;const scale=Math.min((viewWidth-2*padding)/contentWidth,(viewHeight-2*padding)/contentHeight);// Dibuja una línea perpendicular en (x, y)\nconst drawMarkerLine=function(x,y,angleDeg){let length=arguments.length>3&&arguments[3]!==undefined?arguments[3]:20;let stroke=arguments.length>4&&arguments[4]!==undefined?arguments[4]:\"black\";let width=arguments.length>5&&arguments[5]!==undefined?arguments[5]:4;const rad=angleDeg*Math.PI/180;const dx=length/2*Math.cos(rad+Math.PI/2);const dy=length/2*Math.sin(rad+Math.PI/2);return/*#__PURE__*/_jsx(\"line\",{x1:x-dx,y1:y-dy,x2:x+dx,y2:y+dy,stroke:stroke,strokeWidth:width},`${x}-${y}-${stroke}`);};// Calcula ángulo entre dos puntos\nconst angleBetween=(p1,p2)=>{const dx=p2.x-p1.x;const dy=p2.y-p1.y;return Math.atan2(dy,dx)*180/Math.PI;};return/*#__PURE__*/_jsx(\"svg\",{width:viewWidth,height:viewHeight,viewBox:`0 0 ${viewWidth} ${viewHeight}`,style:{border:'1px solid #ccc'},children:/*#__PURE__*/_jsxs(\"g\",{transform:`translate(${padding}, ${viewHeight-padding}) scale(${scale}, -${scale})`,children:[/*#__PURE__*/_jsx(\"path\",{d:pathData,stroke:\"gray\",strokeWidth:15,fill:\"none\"}),(sectorStartPoints===null||sectorStartPoints===void 0?void 0:sectorStartPoints[0])&&(carPoints===null||carPoints===void 0?void 0:carPoints[sectorStartPoints[0].index+1])&&drawMarkerLine(sectorStartPoints[0].x,sectorStartPoints[0].y,angleBetween(carPoints[sectorStartPoints[0].index],carPoints[sectorStartPoints[0].index+1]),40,'red',8),sectorStartPoints===null||sectorStartPoints===void 0?void 0:sectorStartPoints.slice(1).map((p,i)=>{const next=carPoints===null||carPoints===void 0?void 0:carPoints[p.index+1];if(!next)return null;const angle=angleBetween(carPoints[p.index],next);return drawMarkerLine(p.x,p.y,angle,20,'black',4);}),carPosition&&/*#__PURE__*/_jsx(\"circle\",{cx:carPosition.x,cy:carPosition.y,r:\"15\",fill:\"blue\"})]})});}","map":{"version":3,"names":["React","jsx","_jsx","jsxs","_jsxs","CircuitSVG","_ref","pathData","bounds","startLine","carPosition","sectorStartPoints","carPoints","viewWidth","viewHeight","padding","contentWidth","width","contentHeight","height","scale","Math","min","drawMarkerLine","x","y","angleDeg","length","arguments","undefined","stroke","rad","PI","dx","cos","dy","sin","x1","y1","x2","y2","strokeWidth","angleBetween","p1","p2","atan2","viewBox","style","border","children","transform","d","fill","index","slice","map","p","i","next","angle","cx","cy","r"],"sources":["C:/Users/gerar/Documents/Proyectos/Racing Manager/racingmanagerV1/client/src/components/CircuitSVG.js"],"sourcesContent":["import React from 'react';\r\n\r\nexport default function CircuitSVG({ pathData, bounds, startLine, carPosition, sectorStartPoints, carPoints }) {\r\n  const viewWidth = 1000;\r\n  const viewHeight = 600;\r\n  const padding = 150;\r\n\r\n  if (!pathData || !bounds) return null;\r\n\r\n  const contentWidth = bounds.width;\r\n  const contentHeight = bounds.height;\r\n\r\n  const scale = Math.min(\r\n    (viewWidth - 2 * padding) / contentWidth,\r\n    (viewHeight - 2 * padding) / contentHeight\r\n  );\r\n\r\n  // Dibuja una línea perpendicular en (x, y)\r\n  const drawMarkerLine = (x, y, angleDeg, length = 20, stroke = \"black\", width = 4) => {\r\n    const rad = (angleDeg * Math.PI) / 180;\r\n    const dx = (length / 2) * Math.cos(rad + Math.PI / 2);\r\n    const dy = (length / 2) * Math.sin(rad + Math.PI / 2);\r\n    return (\r\n      <line\r\n        key={`${x}-${y}-${stroke}`}\r\n        x1={x - dx}\r\n        y1={y - dy}\r\n        x2={x + dx}\r\n        y2={y + dy}\r\n        stroke={stroke}\r\n        strokeWidth={width}\r\n      />\r\n    );\r\n  };\r\n\r\n  // Calcula ángulo entre dos puntos\r\n  const angleBetween = (p1, p2) => {\r\n    const dx = p2.x - p1.x;\r\n    const dy = p2.y - p1.y;\r\n    return (Math.atan2(dy, dx) * 180) / Math.PI;\r\n  };\r\n\r\n  return (\r\n    <svg\r\n      width={viewWidth}\r\n      height={viewHeight}\r\n      viewBox={`0 0 ${viewWidth} ${viewHeight}`}\r\n      style={{ border: '1px solid #ccc' }}\r\n    >\r\n      <g transform={`translate(${padding}, ${viewHeight - padding}) scale(${scale}, -${scale})`}>\r\n        {/* Circuito */}\r\n        <path d={pathData} stroke=\"gray\" strokeWidth={15} fill=\"none\" />\r\n\r\n        {/* Línea de meta roja en el inicio del primer sector */}\r\n        {sectorStartPoints?.[0] && carPoints?.[sectorStartPoints[0].index + 1] && (\r\n          drawMarkerLine(\r\n            sectorStartPoints[0].x,\r\n            sectorStartPoints[0].y,\r\n            angleBetween(\r\n              carPoints[sectorStartPoints[0].index],\r\n              carPoints[sectorStartPoints[0].index + 1]\r\n            ),\r\n            40,\r\n            'red',\r\n            8\r\n          )\r\n        )}\r\n\r\n        {/* Líneas negras al inicio de los demás sectores */}\r\n        {sectorStartPoints?.slice(1).map((p, i) => {\r\n          const next = carPoints?.[p.index + 1];\r\n          if (!next) return null;\r\n          const angle = angleBetween(carPoints[p.index], next);\r\n          return drawMarkerLine(p.x, p.y, angle, 20, 'black', 4);\r\n        })}\r\n\r\n        {/* Auto */}\r\n        {carPosition && (\r\n          <circle cx={carPosition.x} cy={carPosition.y} r=\"15\" fill=\"blue\" />\r\n        )}\r\n      </g>\r\n    </svg>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}