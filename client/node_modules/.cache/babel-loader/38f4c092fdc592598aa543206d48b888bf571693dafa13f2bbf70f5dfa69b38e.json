{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gerar\\\\Documents\\\\Proyectos\\\\Racing Manager\\\\V1\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SCALE = 0.01; // 1 cm = 0.01 px => 1 m = 1 px aprox\n\nfunction App() {\n  _s();\n  const [circuit, setCircuit] = useState(null);\n  const [pathData, setPathData] = useState('');\n  useEffect(() => {\n    axios.get('http://localhost:3001/circuit/1').then(res => {\n      setCircuit(res.data);\n      const path = generateSVGPath(res.data.mini_sectors);\n      setPathData(path);\n    }).catch(console.error);\n  }, []);\n  const generateCircuitSVG = (sectors, allMiniSectors) => {\n    if (!sectors || sectors.length === 0) return {\n      path: '',\n      startLine: null\n    };\n\n    // Obtener el primer mini sector del primer sector\n    const firstSector = sectors[0];\n    const firstMiniSectorId = firstSector.mini_sector_ids[0];\n    const firstMini = allMiniSectors.find(ms => ms.id === firstMiniSectorId);\n    let x = 300;\n    let y = 200;\n    let angle = 0;\n    let d = `M ${x} ${y}`;\n    let startLine = null; // { x, y, angle }\n\n    for (let sector of allMiniSectors) {\n      const isCurve = sector.curvature_radius_cm > 0;\n\n      // Marcar punto de meta justo antes de recorrer el primer mini sector\n      if (sector.id === firstMini.id) {\n        startLine = {\n          x,\n          y,\n          angle\n        };\n      }\n      if (!isCurve) {\n        var _sector$direction;\n        const length = sector.length_cm * SCALE;\n        const dx = Math.cos(angle * Math.PI / 180) * length;\n        const dy = Math.sin(angle * Math.PI / 180) * length;\n        x += dx;\n        y += dy;\n        d += ` L ${x} ${y}`;\n        angle = (_sector$direction = sector.direction) !== null && _sector$direction !== void 0 ? _sector$direction : angle;\n      } else {\n        const radius = sector.curvature_radius_cm * SCALE;\n        const sweepFlag = sector.curve_direction === 'clockwise' ? 1 : 0;\n        const normalAngle = angle + (sweepFlag === 1 ? 90 : -90);\n        const cx = x + radius * Math.cos(normalAngle * Math.PI / 180);\n        const cy = y + radius * Math.sin(normalAngle * Math.PI / 180);\n        const endAngle = angle + (sweepFlag === 1 ? 180 : -180);\n        const x1 = cx + radius * Math.cos((endAngle + (sweepFlag === 1 ? -90 : 90)) * Math.PI / 180);\n        const y1 = cy + radius * Math.sin((endAngle + (sweepFlag === 1 ? -90 : 90)) * Math.PI / 180);\n        d += ` A ${radius} ${radius} 0 0 ${sweepFlag} ${x1} ${y1}`;\n        x = x1;\n        y = y1;\n        angle = (endAngle + 360) % 360;\n      }\n    }\n    return {\n      path: d,\n      startLine\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '2rem'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Circuit Viewer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), circuit ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: circuit.circuit.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n        viewBox: \"0 0 1600 800\",\n        width: \"100%\",\n        height: \"600\",\n        style: {\n          border: '1px solid black',\n          marginBottom: '1rem'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"path\", {\n          d: pathData,\n          stroke: \"black\",\n          strokeWidth: \"2\",\n          fill: \"none\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n          x1: \"300\",\n          y1: \"195\",\n          x2: \"300\",\n          y2: \"205\",\n          stroke: \"black\",\n          strokeWidth: \"2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 3\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Mini Sectores\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: circuit.mini_sectors.map(ms => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: ms.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 17\n          }, this), \": \", ms.length_cm / 100, \" m,\", ms.curvature_radius_cm > 0 ? ` curva (${ms.curve_direction}, radio ${ms.curvature_radius_cm / 100} m)` : ` recta (dirección ${ms.direction}°)`]\n        }, ms.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Sectores\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: circuit.sectors.map(s => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: s.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 17\n          }, this), \": Mini sectores \", s.mini_sector_ids.join(', ')]\n        }, s.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading circuit...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"xJqgAyzJL3QraV4X+Glwt+psjRA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","SCALE","App","_s","circuit","setCircuit","pathData","setPathData","get","then","res","data","path","generateSVGPath","mini_sectors","catch","console","error","generateCircuitSVG","sectors","allMiniSectors","length","startLine","firstSector","firstMiniSectorId","mini_sector_ids","firstMini","find","ms","id","x","y","angle","d","sector","isCurve","curvature_radius_cm","_sector$direction","length_cm","dx","Math","cos","PI","dy","sin","direction","radius","sweepFlag","curve_direction","normalAngle","cx","cy","endAngle","x1","y1","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","name","viewBox","width","height","border","marginBottom","stroke","strokeWidth","fill","x2","y2","map","s","join","_c","$RefreshReg$"],"sources":["C:/Users/gerar/Documents/Proyectos/Racing Manager/V1/frontend/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nconst SCALE = 0.01; // 1 cm = 0.01 px => 1 m = 1 px aprox\n\nfunction App() {\n  const [circuit, setCircuit] = useState(null);\n  const [pathData, setPathData] = useState('');\n\n  useEffect(() => {\n    axios.get('http://localhost:3001/circuit/1')\n      .then(res => {\n        setCircuit(res.data);\n        const path = generateSVGPath(res.data.mini_sectors);\n        setPathData(path);\n      })\n      .catch(console.error);\n  }, []);\n\n  const generateCircuitSVG = (sectors, allMiniSectors) => {\n    if (!sectors || sectors.length === 0) return { path: '', startLine: null };\n  \n    // Obtener el primer mini sector del primer sector\n    const firstSector = sectors[0];\n    const firstMiniSectorId = firstSector.mini_sector_ids[0];\n    const firstMini = allMiniSectors.find(ms => ms.id === firstMiniSectorId);\n  \n    let x = 300;\n    let y = 200;\n    let angle = 0;\n    let d = `M ${x} ${y}`;\n  \n    let startLine = null; // { x, y, angle }\n  \n    for (let sector of allMiniSectors) {\n      const isCurve = sector.curvature_radius_cm > 0;\n  \n      // Marcar punto de meta justo antes de recorrer el primer mini sector\n      if (sector.id === firstMini.id) {\n        startLine = { x, y, angle };\n      }\n  \n      if (!isCurve) {\n        const length = sector.length_cm * SCALE;\n        const dx = Math.cos(angle * Math.PI / 180) * length;\n        const dy = Math.sin(angle * Math.PI / 180) * length;\n  \n        x += dx;\n        y += dy;\n        d += ` L ${x} ${y}`;\n        angle = sector.direction ?? angle;\n      } else {\n        const radius = sector.curvature_radius_cm * SCALE;\n        const sweepFlag = sector.curve_direction === 'clockwise' ? 1 : 0;\n  \n        const normalAngle = angle + (sweepFlag === 1 ? 90 : -90);\n        const cx = x + radius * Math.cos(normalAngle * Math.PI / 180);\n        const cy = y + radius * Math.sin(normalAngle * Math.PI / 180);\n  \n        const endAngle = angle + (sweepFlag === 1 ? 180 : -180);\n        const x1 = cx + radius * Math.cos((endAngle + (sweepFlag === 1 ? -90 : 90)) * Math.PI / 180);\n        const y1 = cy + radius * Math.sin((endAngle + (sweepFlag === 1 ? -90 : 90)) * Math.PI / 180);\n  \n        d += ` A ${radius} ${radius} 0 0 ${sweepFlag} ${x1} ${y1}`;\n  \n        x = x1;\n        y = y1;\n        angle = (endAngle + 360) % 360;\n      }\n    }\n  \n    return { path: d, startLine };\n  };\n\n  return (\n    <div style={{ padding: '2rem' }}>\n      <h1>Circuit Viewer</h1>\n\n      {circuit ? (\n        <>\n          <h2>{circuit.circuit.name}</h2>\n          <svg\n  viewBox=\"0 0 1600 800\"\n  width=\"100%\"\n  height=\"600\"\n  style={{ border: '1px solid black', marginBottom: '1rem' }}\n>\n  <path d={pathData} stroke=\"black\" strokeWidth=\"2\" fill=\"none\" />\n  {/* Línea perpendicular de inicio */}\n  <line x1=\"300\" y1=\"195\" x2=\"300\" y2=\"205\" stroke=\"black\" strokeWidth=\"2\" />\n</svg>\n\n          <h3>Mini Sectores</h3>\n          <ul>\n            {circuit.mini_sectors.map(ms => (\n              <li key={ms.id}>\n                <strong>{ms.name}</strong>: {ms.length_cm / 100} m, \n                {ms.curvature_radius_cm > 0\n                  ? ` curva (${ms.curve_direction}, radio ${ms.curvature_radius_cm / 100} m)`\n                  : ` recta (dirección ${ms.direction}°)`\n                }\n              </li>\n            ))}\n          </ul>\n\n          <h3>Sectores</h3>\n          <ul>\n            {circuit.sectors.map(s => (\n              <li key={s.id}>\n                <strong>{s.name}</strong>: Mini sectores {s.mini_sector_ids.join(', ')}\n              </li>\n            ))}\n          </ul>\n        </>\n      ) : (\n        <p>Loading circuit...</p>\n      )}\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}