{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gerar\\\\Documents\\\\Proyectos\\\\Racing Manager\\\\V1\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SCALE = 0.01; // 1 cm = 0.01 px => 1 m = 1 px aprox\n\nfunction App() {\n  _s();\n  const [circuit, setCircuit] = useState(null);\n  const [pathData, setPathData] = useState('');\n  useEffect(() => {\n    axios.get('http://localhost:3001/circuit/1').then(res => {\n      setCircuit(res.data);\n      const path = generateSVGPath(res.data.mini_sectors);\n      setPathData(path);\n    }).catch(console.error);\n  }, []);\n  const generateSVGPath = sectors => {\n    if (!sectors || sectors.length === 0) return '';\n    let x = 300;\n    let y = 200;\n    let d = `M ${x} ${y}`;\n    let angle = 0; // inicial dirección (0 = derecha)\n\n    for (let sector of sectors) {\n      const isCurve = sector.curvature_radius_cm > 0;\n      if (!isCurve) {\n        var _sector$direction, _sector$direction2, _sector$direction3;\n        const length = sector.length_cm * SCALE;\n        const dx = Math.cos(((_sector$direction = sector.direction) !== null && _sector$direction !== void 0 ? _sector$direction : angle) * Math.PI / 180) * length;\n        const dy = Math.sin(((_sector$direction2 = sector.direction) !== null && _sector$direction2 !== void 0 ? _sector$direction2 : angle) * Math.PI / 180) * length;\n        x += dx;\n        y += dy;\n        d += ` L ${x} ${y}`;\n        angle = (_sector$direction3 = sector.direction) !== null && _sector$direction3 !== void 0 ? _sector$direction3 : angle;\n      } else {\n        const radius = sector.curvature_radius_cm * SCALE;\n        const sweepFlag = sector.curve_direction === 'clockwise' ? 1 : 0;\n        const arcAngle = Math.PI; // semicircular\n\n        // calculamos el final del arco\n        const dx = Math.cos(angle * Math.PI / 180 + arcAngle) * radius * 2;\n        const dy = Math.sin(angle * Math.PI / 180 + arcAngle) * radius * 2;\n        const x1 = x + dx;\n        const y1 = y + dy;\n        d += ` A ${radius} ${radius} 0 0 ${sweepFlag} ${x1} ${y1}`;\n        x = x1;\n        y = y1;\n        angle += sector.curve_direction === 'clockwise' ? 180 : -180;\n      }\n    }\n    return d;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '2rem'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Circuit Viewer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), circuit ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: circuit.circuit.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n        width: \"800\",\n        height: \"600\",\n        style: {\n          border: '1px solid black',\n          marginBottom: '1rem'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"path\", {\n          d: pathData,\n          stroke: \"black\",\n          strokeWidth: \"2\",\n          fill: \"none\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Mini Sectores\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: circuit.mini_sectors.map(ms => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: ms.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 17\n          }, this), \": \", ms.length_cm / 100, \" m,\", ms.curvature_radius_cm > 0 ? ` curva (${ms.curve_direction}, radio ${ms.curvature_radius_cm / 100} m)` : ` recta (dirección ${ms.direction}°)`]\n        }, ms.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Sectores\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: circuit.sectors.map(s => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: s.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 17\n          }, this), \": Mini sectores \", s.mini_sector_ids.join(', ')]\n        }, s.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading circuit...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"xJqgAyzJL3QraV4X+Glwt+psjRA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","SCALE","App","_s","circuit","setCircuit","pathData","setPathData","get","then","res","data","path","generateSVGPath","mini_sectors","catch","console","error","sectors","length","x","y","d","angle","sector","isCurve","curvature_radius_cm","_sector$direction","_sector$direction2","_sector$direction3","length_cm","dx","Math","cos","direction","PI","dy","sin","radius","sweepFlag","curve_direction","arcAngle","x1","y1","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","name","width","height","border","marginBottom","stroke","strokeWidth","fill","map","ms","id","s","mini_sector_ids","join","_c","$RefreshReg$"],"sources":["C:/Users/gerar/Documents/Proyectos/Racing Manager/V1/frontend/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nconst SCALE = 0.01; // 1 cm = 0.01 px => 1 m = 1 px aprox\n\nfunction App() {\n  const [circuit, setCircuit] = useState(null);\n  const [pathData, setPathData] = useState('');\n\n  useEffect(() => {\n    axios.get('http://localhost:3001/circuit/1')\n      .then(res => {\n        setCircuit(res.data);\n        const path = generateSVGPath(res.data.mini_sectors);\n        setPathData(path);\n      })\n      .catch(console.error);\n  }, []);\n\n  const generateSVGPath = (sectors) => {\n    if (!sectors || sectors.length === 0) return '';\n\n    let x = 300;\n    let y = 200;\n    let d = `M ${x} ${y}`;\n\n    let angle = 0; // inicial dirección (0 = derecha)\n\n    for (let sector of sectors) {\n      const isCurve = sector.curvature_radius_cm > 0;\n\n      if (!isCurve) {\n        const length = sector.length_cm * SCALE;\n        const dx = Math.cos((sector.direction ?? angle) * Math.PI / 180) * length;\n        const dy = Math.sin((sector.direction ?? angle) * Math.PI / 180) * length;\n        x += dx;\n        y += dy;\n        d += ` L ${x} ${y}`;\n        angle = sector.direction ?? angle;\n      } else {\n        const radius = sector.curvature_radius_cm * SCALE;\n        const sweepFlag = sector.curve_direction === 'clockwise' ? 1 : 0;\n        const arcAngle = Math.PI; // semicircular\n\n        // calculamos el final del arco\n        const dx = Math.cos(angle * Math.PI / 180 + arcAngle) * radius * 2;\n        const dy = Math.sin(angle * Math.PI / 180 + arcAngle) * radius * 2;\n        const x1 = x + dx;\n        const y1 = y + dy;\n\n        d += ` A ${radius} ${radius} 0 0 ${sweepFlag} ${x1} ${y1}`;\n\n        x = x1;\n        y = y1;\n        angle += sector.curve_direction === 'clockwise' ? 180 : -180;\n      }\n    }\n\n    return d;\n  };\n\n  return (\n    <div style={{ padding: '2rem' }}>\n      <h1>Circuit Viewer</h1>\n\n      {circuit ? (\n        <>\n          <h2>{circuit.circuit.name}</h2>\n          <svg width=\"800\" height=\"600\" style={{ border: '1px solid black', marginBottom: '1rem' }}>\n            <path d={pathData} stroke=\"black\" strokeWidth=\"2\" fill=\"none\" />\n          </svg>\n\n          <h3>Mini Sectores</h3>\n          <ul>\n            {circuit.mini_sectors.map(ms => (\n              <li key={ms.id}>\n                <strong>{ms.name}</strong>: {ms.length_cm / 100} m, \n                {ms.curvature_radius_cm > 0\n                  ? ` curva (${ms.curve_direction}, radio ${ms.curvature_radius_cm / 100} m)`\n                  : ` recta (dirección ${ms.direction}°)`\n                }\n              </li>\n            ))}\n          </ul>\n\n          <h3>Sectores</h3>\n          <ul>\n            {circuit.sectors.map(s => (\n              <li key={s.id}>\n                <strong>{s.name}</strong>: Mini sectores {s.mini_sector_ids.join(', ')}\n              </li>\n            ))}\n          </ul>\n        </>\n      ) : (\n        <p>Loading circuit...</p>\n      )}\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}