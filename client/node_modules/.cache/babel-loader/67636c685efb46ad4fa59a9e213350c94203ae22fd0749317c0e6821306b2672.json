{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gerar\\\\Documents\\\\Proyectos\\\\Racing Manager\\\\V1\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport axios from 'axios';\nimport { generateCircuitSVG } from './utils/generateCircuitSVG';\nimport CircuitSVG from './components/CircuitSVG';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [circuit, setCircuit] = useState(null);\n  const [pathData, setPathData] = useState('');\n  const [startMarker, setStartMarker] = useState(null);\n  const [debugPoints, setDebugPoints] = useState([]);\n  const [bounds, setBounds] = useState(null);\n  const [selectedCircuitId, setSelectedCircuitId] = useState(1);\n  const [availableCircuits, setAvailableCircuits] = useState([]);\n  const [isRunning, setIsRunning] = useState(false);\n  const [carPosition, setCarPosition] = useState(null);\n  const [elapsedTime, setElapsedTime] = useState(0);\n  const [customSpeed, setCustomSpeed] = useState(100);\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const intervalRef = useRef(null);\n  const carPath = useRef([]);\n  useEffect(() => {\n    axios.get(`http://localhost:3001/circuits/${selectedCircuitId}`).then(res => {\n      setCircuit(res.data);\n      const {\n        path,\n        startLine,\n        debugPoints,\n        bounds\n      } = generateCircuitSVG(res.data.sectors, res.data.mini_sectors);\n      setPathData(path);\n      setStartMarker(startLine);\n      setDebugPoints(debugPoints);\n      setBounds(bounds);\n      setCarPosition(null);\n      setElapsedTime(0);\n      setIsRunning(false);\n      setCurrentIndex(0);\n      if (intervalRef.current) clearInterval(intervalRef.current);\n      setTimeout(() => {\n        const svgPath = document.querySelector('path');\n        if (!svgPath) return;\n        const length = svgPath.getTotalLength();\n        const totalMeters = length;\n        const velocityMps = customSpeed * 1000 / 3600;\n        const intervalMs = 30;\n        const distancePerInterval = velocityMps * (intervalMs / 1000);\n        const steps = Math.floor(totalMeters / distancePerInterval);\n        const points = [];\n        for (let i = 0; i <= steps; i++) {\n          const pos = svgPath.getPointAtLength(i * distancePerInterval);\n          points.push({\n            x: pos.x,\n            y: pos.y\n          });\n        }\n        carPath.current = points;\n      }, 100);\n    }).catch(console.error);\n  }, [selectedCircuitId, customSpeed]);\n  useEffect(() => {\n    axios.get('http://localhost:3001/circuits').then(res => setAvailableCircuits(res.data)).catch(console.error);\n  }, []);\n  const startSimulation = () => {\n    if (!carPath.current.length) return;\n    setIsRunning(true);\n    const intervalMs = 30;\n    intervalRef.current = setInterval(() => {\n      setCarPosition(carPath.current[currentIndex]);\n      setElapsedTime(prev => prev + intervalMs);\n      setCurrentIndex(i => {\n        if (i + 1 >= carPath.current.length) {\n          clearInterval(intervalRef.current);\n          setIsRunning(false);\n          return i;\n        }\n        return i + 1;\n      });\n    }, intervalMs);\n  };\n  const stopSimulation = () => {\n    clearInterval(intervalRef.current);\n    setIsRunning(false);\n  };\n  const resetSimulation = () => {\n    clearInterval(intervalRef.current);\n    setIsRunning(false);\n    setElapsedTime(0);\n    setCarPosition(null);\n    setCurrentIndex(0);\n  };\n  const formatTime = ms => {\n    const totalSeconds = Math.floor(ms / 1000);\n    const hours = Math.floor(totalSeconds / 3600);\n    const minutes = Math.floor(totalSeconds % 3600 / 60);\n    const seconds = totalSeconds % 60;\n    return hours > 0 ? `${hours.toString().padStart(2, '0')}:${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}` : `${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '2rem'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Circuit Viewer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '1rem'\n      },\n      children: [availableCircuits.map(c => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setSelectedCircuitId(c.id),\n        disabled: selectedCircuitId === c.id,\n        style: {\n          marginRight: '0.5rem'\n        },\n        children: c.name\n      }, c.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: customSpeed,\n        onChange: e => setCustomSpeed(parseInt(e.target.value) || 0),\n        style: {\n          width: '80px',\n          marginLeft: '1rem'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), \" km/h\", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startSimulation,\n        style: {\n          marginLeft: '1rem'\n        },\n        children: isRunning ? 'Resume' : 'Start'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: stopSimulation,\n        disabled: !isRunning,\n        style: {\n          marginLeft: '0.5rem'\n        },\n        children: \"Stop\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: resetSimulation,\n        style: {\n          marginLeft: '0.5rem'\n        },\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), circuit && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: circuit.circuit.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(CircuitSVG, {\n        pathData: pathData,\n        bounds: bounds,\n        startLine: startMarker,\n        debugPoints: debugPoints,\n        carPosition: carPosition\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }, this), isRunning && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Tiempo:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 15\n        }, this), \" \", formatTime(elapsedTime), \" | \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Velocidad:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 68\n        }, this), \" \", customSpeed, \" km/h\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Mini Sectores\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: circuit.mini_sectors.map(ms => {\n          var _ms$arc_angle_deg;\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: ms.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 17\n            }, this), \": \", ms.length_cm / 100, \" m,\", \" \", ms.curvature_radius_cm > 0 ? `curva (${ms.curve_direction}, radio ${ms.curvature_radius_cm / 100} m, ángulo ${(_ms$arc_angle_deg = ms.arc_angle_deg) !== null && _ms$arc_angle_deg !== void 0 ? _ms$arc_angle_deg : 180}°)` : `recta (dirección ${ms.direction}°)`]\n          }, ms.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Sectores\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: circuit.sectors.map(s => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: s.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 17\n          }, this), \": Mini sectores \", s.mini_sector_ids.join(', ')]\n        }, s.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"EFWMX4rn2yo56DCTEo67KSzQFak=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","useRef","axios","generateCircuitSVG","CircuitSVG","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","circuit","setCircuit","pathData","setPathData","startMarker","setStartMarker","debugPoints","setDebugPoints","bounds","setBounds","selectedCircuitId","setSelectedCircuitId","availableCircuits","setAvailableCircuits","isRunning","setIsRunning","carPosition","setCarPosition","elapsedTime","setElapsedTime","customSpeed","setCustomSpeed","currentIndex","setCurrentIndex","intervalRef","carPath","get","then","res","data","path","startLine","sectors","mini_sectors","current","clearInterval","setTimeout","svgPath","document","querySelector","length","getTotalLength","totalMeters","velocityMps","intervalMs","distancePerInterval","steps","Math","floor","points","i","pos","getPointAtLength","push","x","y","catch","console","error","startSimulation","setInterval","prev","stopSimulation","resetSimulation","formatTime","ms","totalSeconds","hours","minutes","seconds","toString","padStart","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","marginBottom","map","c","onClick","id","disabled","marginRight","name","type","value","onChange","e","parseInt","target","width","marginLeft","_ms$arc_angle_deg","length_cm","curvature_radius_cm","curve_direction","arc_angle_deg","direction","s","mini_sector_ids","join","_c","$RefreshReg$"],"sources":["C:/Users/gerar/Documents/Proyectos/Racing Manager/V1/frontend/src/App.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\nimport axios from 'axios';\nimport { generateCircuitSVG } from './utils/generateCircuitSVG';\nimport CircuitSVG from './components/CircuitSVG';\n\nfunction App() {\n  const [circuit, setCircuit] = useState(null);\n  const [pathData, setPathData] = useState('');\n  const [startMarker, setStartMarker] = useState(null);\n  const [debugPoints, setDebugPoints] = useState([]);\n  const [bounds, setBounds] = useState(null);\n  const [selectedCircuitId, setSelectedCircuitId] = useState(1);\n  const [availableCircuits, setAvailableCircuits] = useState([]);\n\n  const [isRunning, setIsRunning] = useState(false);\n  const [carPosition, setCarPosition] = useState(null);\n  const [elapsedTime, setElapsedTime] = useState(0);\n  const [customSpeed, setCustomSpeed] = useState(100);\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const intervalRef = useRef(null);\n  const carPath = useRef([]);\n\n  useEffect(() => {\n    axios.get(`http://localhost:3001/circuits/${selectedCircuitId}`)\n      .then(res => {\n        setCircuit(res.data);\n        const { path, startLine, debugPoints, bounds } = generateCircuitSVG(\n          res.data.sectors,\n          res.data.mini_sectors\n        );\n        setPathData(path);\n        setStartMarker(startLine);\n        setDebugPoints(debugPoints);\n        setBounds(bounds);\n        setCarPosition(null);\n        setElapsedTime(0);\n        setIsRunning(false);\n        setCurrentIndex(0);\n        if (intervalRef.current) clearInterval(intervalRef.current);\n\n        setTimeout(() => {\n          const svgPath = document.querySelector('path');\n          if (!svgPath) return;\n          const length = svgPath.getTotalLength();\n          const totalMeters = length;\n          const velocityMps = customSpeed * 1000 / 3600;\n          const intervalMs = 30;\n          const distancePerInterval = velocityMps * (intervalMs / 1000);\n          const steps = Math.floor(totalMeters / distancePerInterval);\n\n          const points = [];\n          for (let i = 0; i <= steps; i++) {\n            const pos = svgPath.getPointAtLength(i * distancePerInterval);\n            points.push({ x: pos.x, y: pos.y });\n          }\n\n          carPath.current = points;\n        }, 100);\n      })\n      .catch(console.error);\n  }, [selectedCircuitId, customSpeed]);\n\n  useEffect(() => {\n    axios.get('http://localhost:3001/circuits')\n      .then(res => setAvailableCircuits(res.data))\n      .catch(console.error);\n  }, []);\n\n  const startSimulation = () => {\n    if (!carPath.current.length) return;\n\n    setIsRunning(true);\n    const intervalMs = 30;\n    intervalRef.current = setInterval(() => {\n      setCarPosition(carPath.current[currentIndex]);\n      setElapsedTime(prev => prev + intervalMs);\n      setCurrentIndex(i => {\n        if (i + 1 >= carPath.current.length) {\n          clearInterval(intervalRef.current);\n          setIsRunning(false);\n          return i;\n        }\n        return i + 1;\n      });\n    }, intervalMs);\n  };\n\n  const stopSimulation = () => {\n    clearInterval(intervalRef.current);\n    setIsRunning(false);\n  };\n\n  const resetSimulation = () => {\n    clearInterval(intervalRef.current);\n    setIsRunning(false);\n    setElapsedTime(0);\n    setCarPosition(null);\n    setCurrentIndex(0);\n  };\n\n  const formatTime = (ms) => {\n    const totalSeconds = Math.floor(ms / 1000);\n    const hours = Math.floor(totalSeconds / 3600);\n    const minutes = Math.floor((totalSeconds % 3600) / 60);\n    const seconds = totalSeconds % 60;\n    return hours > 0\n      ? `${hours.toString().padStart(2, '0')}:${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`\n      : `${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`;\n  };\n\n  return (\n    <div style={{ padding: '2rem' }}>\n      <h1>Circuit Viewer</h1>\n\n      <div style={{ marginBottom: '1rem' }}>\n        {availableCircuits.map(c => (\n          <button\n            key={c.id}\n            onClick={() => setSelectedCircuitId(c.id)}\n            disabled={selectedCircuitId === c.id}\n            style={{ marginRight: '0.5rem' }}\n          >\n            {c.name}\n          </button>\n        ))}\n        <input\n          type=\"number\"\n          value={customSpeed}\n          onChange={(e) => setCustomSpeed(parseInt(e.target.value) || 0)}\n          style={{ width: '80px', marginLeft: '1rem' }}\n        /> km/h\n        <button onClick={startSimulation} style={{ marginLeft: '1rem' }}>\n          {isRunning ? 'Resume' : 'Start'}\n        </button>\n        <button onClick={stopSimulation} disabled={!isRunning} style={{ marginLeft: '0.5rem' }}>\n          Stop\n        </button>\n        <button onClick={resetSimulation} style={{ marginLeft: '0.5rem' }}>\n          Reset\n        </button>\n      </div>\n\n      {circuit && (\n        <>\n          <h2>{circuit.circuit.name}</h2>\n          <CircuitSVG\n            pathData={pathData}\n            bounds={bounds}\n            startLine={startMarker}\n            debugPoints={debugPoints}\n            carPosition={carPosition}\n          />\n\n          {isRunning && (\n            <p>\n              <strong>Tiempo:</strong> {formatTime(elapsedTime)} | <strong>Velocidad:</strong> {customSpeed} km/h\n            </p>\n          )}\n\n          <h3>Mini Sectores</h3>\n          <ul>\n            {circuit.mini_sectors.map(ms => (\n              <li key={ms.id}>\n                <strong>{ms.name}</strong>: {ms.length_cm / 100} m,{\" \"}\n                {ms.curvature_radius_cm > 0\n                  ? `curva (${ms.curve_direction}, radio ${ms.curvature_radius_cm / 100} m, ángulo ${ms.arc_angle_deg ?? 180}°)`\n                  : `recta (dirección ${ms.direction}°)`}\n              </li>\n            ))}\n          </ul>\n\n          <h3>Sectores</h3>\n          <ul>\n            {circuit.sectors.map(s => (\n              <li key={s.id}>\n                <strong>{s.name}</strong>: Mini sectores {s.mini_sector_ids.join(', ')}\n              </li>\n            ))}\n          </ul>\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}