{"ast":null,"code":"import React,{useEffect,useState,useRef}from'react';import axios from'axios';import{generateCircuitSVG}from'./utils/generateCircuitSVG';import CircuitSVG from'./components/CircuitSVG';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";function App(){const[circuit,setCircuit]=useState(null);const[pathData,setPathData]=useState('');const[startMarker,setStartMarker]=useState(null);const[sectorStartPoints,setSectorStartPoints]=useState([]);const[sectorNames,setSectorNames]=useState([]);const[bounds,setBounds]=useState(null);const[selectedCircuitId,setSelectedCircuitId]=useState(1);const[availableCircuits,setAvailableCircuits]=useState([]);const[isRunning,setIsRunning]=useState(false);const[wasStopped,setWasStopped]=useState(false);const[carPosition,setCarPosition]=useState(null);const[elapsedTime,setElapsedTime]=useState(0);const[customSpeed,setCustomSpeed]=useState(100);const[currentSpeed,setCurrentSpeed]=useState(0);const[completed,setCompleted]=useState(false);const[sectorTimes,setSectorTimes]=useState([]);const intervalRef=useRef(null);const carPath=useRef([]);const speedPath=useRef([]);const indexRef=useRef(0);const currentSectorIndexRef=useRef(0);const sectorStartTimeRef=useRef(0);const elapsedRef=useRef(0);// NUEVO: tiempo real en ms\nuseEffect(()=>{axios.get(`http://localhost:3001/circuit?id=${selectedCircuitId}`).then(res=>{setCircuit(res.data);const{path,startLine,bounds,carPoints,carSpeeds,sectorStartPoints}=generateCircuitSVG(res.data.sectors,res.data.mini_sectors,{speed:customSpeed});setPathData(path);setStartMarker(startLine);setSectorStartPoints(sectorStartPoints);setSectorNames(res.data.sectors.map(s=>s.name));setBounds(bounds);// Reset estado\nsetCarPosition(null);setElapsedTime(0);elapsedRef.current=0;setCurrentSpeed(0);setCompleted(false);setIsRunning(false);setWasStopped(false);setSectorTimes([]);indexRef.current=0;currentSectorIndexRef.current=0;sectorStartTimeRef.current=0;if(intervalRef.current)clearInterval(intervalRef.current);carPath.current=carPoints;speedPath.current=carSpeeds;}).catch(console.error);},[selectedCircuitId,customSpeed]);useEffect(()=>{axios.get('http://localhost:3001/circuits').then(res=>setAvailableCircuits(res.data)).catch(console.error);},[]);const startSimulation=()=>{if(!carPath.current.length)return;setIsRunning(true);setWasStopped(false);setCompleted(false);currentSectorIndexRef.current=0;sectorStartTimeRef.current=0;elapsedRef.current=0;const intervalMs=30;intervalRef.current=setInterval(()=>{const i=indexRef.current;if(i>=carPath.current.length){clearInterval(intervalRef.current);setIsRunning(false);setCompleted(true);// Registrar Ãºltimo sector\nif(currentSectorIndexRef.current<sectorStartPoints.length){const time=elapsedRef.current-sectorStartTimeRef.current;setSectorTimes(prev=>[...prev,{index:currentSectorIndexRef.current,time}]);}return;}// Actualizar estado\nelapsedRef.current+=intervalMs;setElapsedTime(elapsedRef.current);setCarPosition(carPath.current[i]);setCurrentSpeed(speedPath.current[i]||0);indexRef.current+=1;// Ver si entramos a un nuevo sector\nif(currentSectorIndexRef.current<sectorStartPoints.length-1&&i>=sectorStartPoints[currentSectorIndexRef.current+1].index){const time=elapsedRef.current-sectorStartTimeRef.current;setSectorTimes(prev=>[...prev,{index:currentSectorIndexRef.current,time}]);currentSectorIndexRef.current+=1;sectorStartTimeRef.current=elapsedRef.current;}},intervalMs);};const stopSimulation=()=>{clearInterval(intervalRef.current);setIsRunning(false);setWasStopped(true);};const resetSimulation=()=>{clearInterval(intervalRef.current);setIsRunning(false);setCarPosition(null);setElapsedTime(0);elapsedRef.current=0;setCurrentSpeed(0);setCompleted(false);setWasStopped(false);setSectorTimes([]);indexRef.current=0;currentSectorIndexRef.current=0;sectorStartTimeRef.current=0;};const formatTime=ms=>{const milliseconds=ms%1000;const totalSeconds=Math.floor(ms/1000);const hours=Math.floor(totalSeconds/3600);const minutes=Math.floor(totalSeconds%3600/60);const seconds=totalSeconds%60;const formattedMs=milliseconds.toString().padStart(3,'0');const formattedSeconds=seconds.toString().padStart(2,'0');const formattedMinutes=minutes.toString().padStart(2,'0');if(hours>0){return`${hours}:${formattedMinutes}:${formattedSeconds}.${formattedMs}`;}else{return`${formattedMinutes}:${formattedSeconds}.${formattedMs}`;}};const formatDistance=meters=>`${meters.toFixed(0)} m`;return/*#__PURE__*/_jsxs(\"div\",{style:{padding:'2rem'},children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Racing Manager V1\"}),/*#__PURE__*/_jsxs(\"div\",{style:{marginBottom:'1rem'},children:[availableCircuits.map(c=>/*#__PURE__*/_jsx(\"button\",{onClick:()=>setSelectedCircuitId(c.id),disabled:selectedCircuitId===c.id,style:{marginRight:'0.5rem'},children:c.name},c.id)),/*#__PURE__*/_jsx(\"input\",{type:\"number\",value:customSpeed,onChange:e=>setCustomSpeed(parseInt(e.target.value)||0),style:{width:'80px',marginLeft:'1rem'}}),\" km/h\",/*#__PURE__*/_jsx(\"button\",{onClick:startSimulation,disabled:isRunning,style:{marginLeft:'1rem'},children:\"Start\"}),/*#__PURE__*/_jsx(\"button\",{onClick:startSimulation,disabled:!(wasStopped&&!isRunning),style:{marginLeft:'0.5rem'},children:\"Resume\"}),/*#__PURE__*/_jsx(\"button\",{onClick:stopSimulation,disabled:!isRunning,style:{marginLeft:'0.5rem'},children:\"Stop\"}),/*#__PURE__*/_jsx(\"button\",{onClick:resetSimulation,style:{marginLeft:'0.5rem'},children:\"Reset\"})]}),circuit&&/*#__PURE__*/_jsx(\"div\",{style:{display:'flex'},children:/*#__PURE__*/_jsxs(\"div\",{style:{flex:1,display:'flex',alignItems:'flex-start'},children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"h2\",{children:[circuit.circuit.name,' ',/*#__PURE__*/_jsxs(\"span\",{children:[\"\\u2014 Longitud total: \",formatDistance(circuit.circuit.total_length_m)]})]}),/*#__PURE__*/_jsx(CircuitSVG,{pathData:pathData,bounds:bounds,startLine:startMarker,carPosition:carPosition,sectorStartPoints:sectorStartPoints,carPoints:carPath.current})]}),/*#__PURE__*/_jsxs(\"div\",{style:{paddingLeft:'1rem',fontSize:'0.9rem'},children:[/*#__PURE__*/_jsx(\"h3\",{style:{marginTop:0},children:\"Datos\"}),isRunning&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Tiempo:\"}),\" \",formatTime(elapsedTime)]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Velocidad:\"}),\" \",currentSpeed.toFixed(1),\" km/h\"]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Distancia:\"}),\" \",formatDistance(indexRef.current)]})]}),completed&&/*#__PURE__*/_jsx(\"p\",{style:{color:'green'},children:/*#__PURE__*/_jsxs(\"strong\",{children:[\"\\xA1Vuelta completada en \",formatTime(elapsedTime),\"!\"]})}),sectorTimes.length>0&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"h4\",{style:{marginTop:'1rem'},children:\"Tiempos por sector\"}),/*#__PURE__*/_jsx(\"ul\",{children:sectorTimes.map((st,i)=>{var _sectorNames$i;return/*#__PURE__*/_jsxs(\"li\",{children:[(_sectorNames$i=sectorNames[i])!==null&&_sectorNames$i!==void 0?_sectorNames$i:`Sector ${i+1}`,\": \",formatTime(st.time)]},i);})})]})]})]})})]});}export default App;","map":{"version":3,"names":["React","useEffect","useState","useRef","axios","generateCircuitSVG","CircuitSVG","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","App","circuit","setCircuit","pathData","setPathData","startMarker","setStartMarker","sectorStartPoints","setSectorStartPoints","sectorNames","setSectorNames","bounds","setBounds","selectedCircuitId","setSelectedCircuitId","availableCircuits","setAvailableCircuits","isRunning","setIsRunning","wasStopped","setWasStopped","carPosition","setCarPosition","elapsedTime","setElapsedTime","customSpeed","setCustomSpeed","currentSpeed","setCurrentSpeed","completed","setCompleted","sectorTimes","setSectorTimes","intervalRef","carPath","speedPath","indexRef","currentSectorIndexRef","sectorStartTimeRef","elapsedRef","get","then","res","data","path","startLine","carPoints","carSpeeds","sectors","mini_sectors","speed","map","s","name","current","clearInterval","catch","console","error","startSimulation","length","intervalMs","setInterval","i","time","prev","index","stopSimulation","resetSimulation","formatTime","ms","milliseconds","totalSeconds","Math","floor","hours","minutes","seconds","formattedMs","toString","padStart","formattedSeconds","formattedMinutes","formatDistance","meters","toFixed","style","padding","children","marginBottom","c","onClick","id","disabled","marginRight","type","value","onChange","e","parseInt","target","width","marginLeft","display","flex","alignItems","total_length_m","paddingLeft","fontSize","marginTop","color","st","_sectorNames$i"],"sources":["C:/Users/gerar/Documents/Proyectos/Racing Manager/racingmanagerV1/client/src/App.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\nimport axios from 'axios';\r\nimport { generateCircuitSVG } from './utils/generateCircuitSVG';\r\nimport CircuitSVG from './components/CircuitSVG';\r\n\r\nfunction App() {\r\n  const [circuit, setCircuit] = useState(null);\r\n  const [pathData, setPathData] = useState('');\r\n  const [startMarker, setStartMarker] = useState(null);\r\n  const [sectorStartPoints, setSectorStartPoints] = useState([]);\r\n  const [sectorNames, setSectorNames] = useState([]);\r\n  const [bounds, setBounds] = useState(null);\r\n  const [selectedCircuitId, setSelectedCircuitId] = useState(1);\r\n  const [availableCircuits, setAvailableCircuits] = useState([]);\r\n\r\n  const [isRunning, setIsRunning] = useState(false);\r\n  const [wasStopped, setWasStopped] = useState(false);\r\n  const [carPosition, setCarPosition] = useState(null);\r\n  const [elapsedTime, setElapsedTime] = useState(0);\r\n  const [customSpeed, setCustomSpeed] = useState(100);\r\n  const [currentSpeed, setCurrentSpeed] = useState(0);\r\n  const [completed, setCompleted] = useState(false);\r\n  const [sectorTimes, setSectorTimes] = useState([]);\r\n\r\n  const intervalRef = useRef(null);\r\n  const carPath = useRef([]);\r\n  const speedPath = useRef([]);\r\n  const indexRef = useRef(0);\r\n\r\n  const currentSectorIndexRef = useRef(0);\r\n  const sectorStartTimeRef = useRef(0);\r\n  const elapsedRef = useRef(0); // NUEVO: tiempo real en ms\r\n\r\n  useEffect(() => {\r\n    axios.get(`http://localhost:3001/circuit?id=${selectedCircuitId}`)\r\n      .then(res => {\r\n        setCircuit(res.data);\r\n        const {\r\n          path,\r\n          startLine,\r\n          bounds,\r\n          carPoints,\r\n          carSpeeds,\r\n          sectorStartPoints\r\n        } = generateCircuitSVG(\r\n          res.data.sectors,\r\n          res.data.mini_sectors,\r\n          { speed: customSpeed }\r\n        );\r\n\r\n        setPathData(path);\r\n        setStartMarker(startLine);\r\n        setSectorStartPoints(sectorStartPoints);\r\n        setSectorNames(res.data.sectors.map(s => s.name));\r\n        setBounds(bounds);\r\n\r\n        // Reset estado\r\n        setCarPosition(null);\r\n        setElapsedTime(0);\r\n        elapsedRef.current = 0;\r\n        setCurrentSpeed(0);\r\n        setCompleted(false);\r\n        setIsRunning(false);\r\n        setWasStopped(false);\r\n        setSectorTimes([]);\r\n        indexRef.current = 0;\r\n        currentSectorIndexRef.current = 0;\r\n        sectorStartTimeRef.current = 0;\r\n\r\n        if (intervalRef.current) clearInterval(intervalRef.current);\r\n\r\n        carPath.current = carPoints;\r\n        speedPath.current = carSpeeds;\r\n      })\r\n      .catch(console.error);\r\n  }, [selectedCircuitId, customSpeed]);\r\n\r\n  useEffect(() => {\r\n    axios.get('http://localhost:3001/circuits')\r\n      .then(res => setAvailableCircuits(res.data))\r\n      .catch(console.error);\r\n  }, []);\r\n\r\n  const startSimulation = () => {\r\n    if (!carPath.current.length) return;\r\n\r\n    setIsRunning(true);\r\n    setWasStopped(false);\r\n    setCompleted(false);\r\n\r\n    currentSectorIndexRef.current = 0;\r\n    sectorStartTimeRef.current = 0;\r\n    elapsedRef.current = 0;\r\n\r\n    const intervalMs = 30;\r\n    intervalRef.current = setInterval(() => {\r\n      const i = indexRef.current;\r\n\r\n      if (i >= carPath.current.length) {\r\n        clearInterval(intervalRef.current);\r\n        setIsRunning(false);\r\n        setCompleted(true);\r\n\r\n        // Registrar Ãºltimo sector\r\n        if (currentSectorIndexRef.current < sectorStartPoints.length) {\r\n          const time = elapsedRef.current - sectorStartTimeRef.current;\r\n          setSectorTimes(prev => [\r\n            ...prev,\r\n            {\r\n              index: currentSectorIndexRef.current,\r\n              time\r\n            }\r\n          ]);\r\n        }\r\n\r\n        return;\r\n      }\r\n\r\n      // Actualizar estado\r\n      elapsedRef.current += intervalMs;\r\n      setElapsedTime(elapsedRef.current);\r\n      setCarPosition(carPath.current[i]);\r\n      setCurrentSpeed(speedPath.current[i] || 0);\r\n      indexRef.current += 1;\r\n\r\n      // Ver si entramos a un nuevo sector\r\n      if (\r\n        currentSectorIndexRef.current < sectorStartPoints.length - 1 &&\r\n        i >= sectorStartPoints[currentSectorIndexRef.current + 1].index\r\n      ) {\r\n        const time = elapsedRef.current - sectorStartTimeRef.current;\r\n        setSectorTimes(prev => [\r\n          ...prev,\r\n          {\r\n            index: currentSectorIndexRef.current,\r\n            time\r\n          }\r\n        ]);\r\n\r\n        currentSectorIndexRef.current += 1;\r\n        sectorStartTimeRef.current = elapsedRef.current;\r\n      }\r\n    }, intervalMs);\r\n  };\r\n\r\n  const stopSimulation = () => {\r\n    clearInterval(intervalRef.current);\r\n    setIsRunning(false);\r\n    setWasStopped(true);\r\n  };\r\n\r\n  const resetSimulation = () => {\r\n    clearInterval(intervalRef.current);\r\n    setIsRunning(false);\r\n    setCarPosition(null);\r\n    setElapsedTime(0);\r\n    elapsedRef.current = 0;\r\n    setCurrentSpeed(0);\r\n    setCompleted(false);\r\n    setWasStopped(false);\r\n    setSectorTimes([]);\r\n    indexRef.current = 0;\r\n    currentSectorIndexRef.current = 0;\r\n    sectorStartTimeRef.current = 0;\r\n  };\r\n\r\n  const formatTime = (ms) => {\r\n    const milliseconds = ms % 1000;\r\n    const totalSeconds = Math.floor(ms / 1000);\r\n    const hours = Math.floor(totalSeconds / 3600);\r\n    const minutes = Math.floor((totalSeconds % 3600) / 60);\r\n    const seconds = totalSeconds % 60;\r\n\r\n    const formattedMs = milliseconds.toString().padStart(3, '0');\r\n    const formattedSeconds = seconds.toString().padStart(2, '0');\r\n    const formattedMinutes = minutes.toString().padStart(2, '0');\r\n\r\n    if (hours > 0) {\r\n      return `${hours}:${formattedMinutes}:${formattedSeconds}.${formattedMs}`;\r\n    } else {\r\n      return `${formattedMinutes}:${formattedSeconds}.${formattedMs}`;\r\n    }\r\n  };\r\n\r\n  const formatDistance = (meters) => `${meters.toFixed(0)} m`;\r\n\r\n  return (\r\n    <div style={{ padding: '2rem' }}>\r\n      <h1>Racing Manager V1</h1>\r\n\r\n      <div style={{ marginBottom: '1rem' }}>\r\n        {availableCircuits.map(c => (\r\n          <button\r\n            key={c.id}\r\n            onClick={() => setSelectedCircuitId(c.id)}\r\n            disabled={selectedCircuitId === c.id}\r\n            style={{ marginRight: '0.5rem' }}\r\n          >\r\n            {c.name}\r\n          </button>\r\n        ))}\r\n        <input\r\n          type=\"number\"\r\n          value={customSpeed}\r\n          onChange={(e) => setCustomSpeed(parseInt(e.target.value) || 0)}\r\n          style={{ width: '80px', marginLeft: '1rem' }}\r\n        /> km/h\r\n\r\n        <button onClick={startSimulation} disabled={isRunning} style={{ marginLeft: '1rem' }}>\r\n          Start\r\n        </button>\r\n        <button onClick={startSimulation} disabled={!(wasStopped && !isRunning)} style={{ marginLeft: '0.5rem' }}>\r\n          Resume\r\n        </button>\r\n        <button onClick={stopSimulation} disabled={!isRunning} style={{ marginLeft: '0.5rem' }}>\r\n          Stop\r\n        </button>\r\n        <button onClick={resetSimulation} style={{ marginLeft: '0.5rem' }}>\r\n          Reset\r\n        </button>\r\n      </div>\r\n\r\n      {circuit && (\r\n        <div style={{ display: 'flex' }}>\r\n          <div style={{ flex: 1, display: 'flex', alignItems: 'flex-start' }}>\r\n            <div>\r\n              <h2>\r\n                {circuit.circuit.name}{' '}\r\n                <span>â Longitud total: {formatDistance(circuit.circuit.total_length_m)}</span>\r\n              </h2>\r\n              <CircuitSVG\r\n                pathData={pathData}\r\n                bounds={bounds}\r\n                startLine={startMarker}\r\n                carPosition={carPosition}\r\n                sectorStartPoints={sectorStartPoints}\r\n                carPoints={carPath.current}\r\n              />\r\n            </div>\r\n            <div style={{ paddingLeft: '1rem', fontSize: '0.9rem' }}>\r\n              <h3 style={{ marginTop: 0 }}>Datos</h3>\r\n              {isRunning && (\r\n                <>\r\n                  <p><strong>Tiempo:</strong> {formatTime(elapsedTime)}</p>\r\n                  <p><strong>Velocidad:</strong> {currentSpeed.toFixed(1)} km/h</p>\r\n                  <p><strong>Distancia:</strong> {formatDistance(indexRef.current)}</p>\r\n                </>\r\n              )}\r\n              {completed && (\r\n                <p style={{ color: 'green' }}>\r\n                  <strong>Â¡Vuelta completada en {formatTime(elapsedTime)}!</strong>\r\n                </p>\r\n              )}\r\n              {sectorTimes.length > 0 && (\r\n                <>\r\n                  <h4 style={{ marginTop: '1rem' }}>Tiempos por sector</h4>\r\n                  <ul>\r\n                    {sectorTimes.map((st, i) => (\r\n                      <li key={i}>\r\n                        {sectorNames[i] ?? `Sector ${i + 1}`}: {formatTime(st.time)}\r\n                      </li>\r\n                    ))}\r\n                  </ul>\r\n                </>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}