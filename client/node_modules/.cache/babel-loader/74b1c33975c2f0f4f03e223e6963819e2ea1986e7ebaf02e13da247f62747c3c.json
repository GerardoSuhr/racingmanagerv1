{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gerar\\\\Documents\\\\Proyectos\\\\Racing Manager\\\\racingmanagerV1\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport axios from 'axios';\nimport { generateCircuitSVG } from './utils/generateCircuitSVG';\nimport CircuitSVG from './components/CircuitSVG';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [circuit, setCircuit] = useState(null);\n  const [pathData, setPathData] = useState('');\n  const [startMarker, setStartMarker] = useState(null);\n  const [sectorStartPoints, setSectorStartPoints] = useState([]);\n  const [sectorNames, setSectorNames] = useState([]);\n  const [bounds, setBounds] = useState(null);\n  const [selectedCircuitId, setSelectedCircuitId] = useState(1);\n  const [availableCircuits, setAvailableCircuits] = useState([]);\n  const [isRunning, setIsRunning] = useState(false);\n  const [wasStopped, setWasStopped] = useState(false);\n  const [carPosition, setCarPosition] = useState(null);\n  const [elapsedTime, setElapsedTime] = useState(0);\n  const [customSpeed, setCustomSpeed] = useState(100);\n  const [currentSpeed, setCurrentSpeed] = useState(0);\n  const [completed, setCompleted] = useState(false);\n  const [sectorTimes, setSectorTimes] = useState([]);\n  const intervalRef = useRef(null);\n  const carPath = useRef([]);\n  const speedPath = useRef([]);\n  const indexRef = useRef(0);\n  const currentSectorIndexRef = useRef(0);\n  const sectorStartTimeRef = useRef(0);\n  const elapsedRef = useRef(0); // NUEVO: tiempo real en ms\n\n  useEffect(() => {\n    axios.get(`http://localhost:3001/circuit?id=${selectedCircuitId}`).then(res => {\n      setCircuit(res.data);\n      const {\n        path,\n        startLine,\n        bounds,\n        carPoints,\n        carSpeeds,\n        sectorStartPoints\n      } = generateCircuitSVG(res.data.sectors, res.data.mini_sectors, {\n        speed: customSpeed\n      });\n      setPathData(path);\n      setStartMarker(startLine);\n      setSectorStartPoints(sectorStartPoints);\n      setSectorNames(res.data.sectors.map(s => s.name));\n      setBounds(bounds);\n\n      // Reset estado\n      setCarPosition(null);\n      setElapsedTime(0);\n      elapsedRef.current = 0;\n      setCurrentSpeed(0);\n      setCompleted(false);\n      setIsRunning(false);\n      setWasStopped(false);\n      setSectorTimes([]);\n      indexRef.current = 0;\n      currentSectorIndexRef.current = 0;\n      sectorStartTimeRef.current = 0;\n      if (intervalRef.current) clearInterval(intervalRef.current);\n      carPath.current = carPoints;\n      speedPath.current = carSpeeds;\n    }).catch(console.error);\n  }, [selectedCircuitId, customSpeed]);\n  useEffect(() => {\n    axios.get('http://localhost:3001/circuits').then(res => setAvailableCircuits(res.data)).catch(console.error);\n  }, []);\n  const startSimulation = () => {\n    if (!carPath.current.length) return;\n    setIsRunning(true);\n    setWasStopped(false);\n    setCompleted(false);\n    currentSectorIndexRef.current = 0;\n    sectorStartTimeRef.current = 0;\n    elapsedRef.current = 0;\n    const intervalMs = 30;\n    intervalRef.current = setInterval(() => {\n      const i = indexRef.current;\n      if (i >= carPath.current.length) {\n        clearInterval(intervalRef.current);\n        setIsRunning(false);\n        setCompleted(true);\n\n        // Registrar Ãºltimo sector\n        if (currentSectorIndexRef.current < sectorStartPoints.length) {\n          const time = elapsedRef.current - sectorStartTimeRef.current;\n          setSectorTimes(prev => [...prev, {\n            index: currentSectorIndexRef.current,\n            time\n          }]);\n        }\n        return;\n      }\n\n      // Actualizar estado\n      elapsedRef.current += intervalMs;\n      setElapsedTime(elapsedRef.current);\n      setCarPosition(carPath.current[i]);\n      setCurrentSpeed(speedPath.current[i] || 0);\n      indexRef.current += 1;\n\n      // Ver si entramos a un nuevo sector\n      if (currentSectorIndexRef.current < sectorStartPoints.length - 1 && i >= sectorStartPoints[currentSectorIndexRef.current + 1].index) {\n        const time = elapsedRef.current - sectorStartTimeRef.current;\n        setSectorTimes(prev => [...prev, {\n          index: currentSectorIndexRef.current,\n          time\n        }]);\n        currentSectorIndexRef.current += 1;\n        sectorStartTimeRef.current = elapsedRef.current;\n      }\n    }, intervalMs);\n  };\n  const stopSimulation = () => {\n    clearInterval(intervalRef.current);\n    setIsRunning(false);\n    setWasStopped(true);\n  };\n  const resetSimulation = () => {\n    clearInterval(intervalRef.current);\n    setIsRunning(false);\n    setCarPosition(null);\n    setElapsedTime(0);\n    elapsedRef.current = 0;\n    setCurrentSpeed(0);\n    setCompleted(false);\n    setWasStopped(false);\n    setSectorTimes([]);\n    indexRef.current = 0;\n    currentSectorIndexRef.current = 0;\n    sectorStartTimeRef.current = 0;\n  };\n  const formatTime = ms => {\n    const milliseconds = ms % 1000;\n    const totalSeconds = Math.floor(ms / 1000);\n    const hours = Math.floor(totalSeconds / 3600);\n    const minutes = Math.floor(totalSeconds % 3600 / 60);\n    const seconds = totalSeconds % 60;\n    const formattedMs = milliseconds.toString().padStart(3, '0');\n    const formattedSeconds = seconds.toString().padStart(2, '0');\n    const formattedMinutes = minutes.toString().padStart(2, '0');\n    if (hours > 0) {\n      return `${hours}:${formattedMinutes}:${formattedSeconds}.${formattedMs}`;\n    } else {\n      return `${formattedMinutes}:${formattedSeconds}.${formattedMs}`;\n    }\n  };\n  const formatDistance = meters => `${meters.toFixed(0)} m`;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '2rem'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Racing Manager V1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '1rem'\n      },\n      children: [availableCircuits.map(c => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setSelectedCircuitId(c.id),\n        disabled: selectedCircuitId === c.id,\n        style: {\n          marginRight: '0.5rem'\n        },\n        children: c.name\n      }, c.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: customSpeed,\n        onChange: e => setCustomSpeed(parseInt(e.target.value) || 0),\n        style: {\n          width: '80px',\n          marginLeft: '1rem'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this), \" km/h\", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startSimulation,\n        disabled: isRunning,\n        style: {\n          marginLeft: '1rem'\n        },\n        children: \"Start\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startSimulation,\n        disabled: !(wasStopped && !isRunning),\n        style: {\n          marginLeft: '0.5rem'\n        },\n        children: \"Resume\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: stopSimulation,\n        disabled: !isRunning,\n        style: {\n          marginLeft: '0.5rem'\n        },\n        children: \"Stop\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: resetSimulation,\n        style: {\n          marginLeft: '0.5rem'\n        },\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }, this), circuit && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flex: 1,\n          display: 'flex',\n          alignItems: 'flex-start'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [circuit.circuit.name, ' ', /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"\\u2014 Longitud total: \", formatDistance(circuit.circuit.total_length_m)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(CircuitSVG, {\n            pathData: pathData,\n            bounds: bounds,\n            startLine: startMarker,\n            carPosition: carPosition,\n            sectorStartPoints: sectorStartPoints,\n            carPoints: carPath.current\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            paddingLeft: '1rem',\n            fontSize: '0.9rem'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            style: {\n              marginTop: 0\n            },\n            children: \"Datos\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 15\n          }, this), isRunning && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Tiempo:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 244,\n                columnNumber: 22\n              }, this), \" \", formatTime(elapsedTime)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Velocidad:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 22\n              }, this), \" \", currentSpeed.toFixed(1), \" km/h\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Distancia:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 22\n              }, this), \" \", formatDistance(indexRef.current)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true), completed && /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              color: 'green'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [\"\\xA1Vuelta completada en \", formatTime(elapsedTime), \"!\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 17\n          }, this), sectorTimes.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              style: {\n                marginTop: '1rem'\n              },\n              children: \"Tiempos por sector\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: sectorTimes.map((st, i) => {\n                var _sectorNames$i;\n                return /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: [(_sectorNames$i = sectorNames[i]) !== null && _sectorNames$i !== void 0 ? _sectorNames$i : `Sector ${i + 1}`, \": \", formatTime(st.time)]\n                }, i, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 259,\n                  columnNumber: 23\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 188,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"0WjKguy4ZBS3ahy+MDZwi6lH+m0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","useRef","axios","generateCircuitSVG","CircuitSVG","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","circuit","setCircuit","pathData","setPathData","startMarker","setStartMarker","sectorStartPoints","setSectorStartPoints","sectorNames","setSectorNames","bounds","setBounds","selectedCircuitId","setSelectedCircuitId","availableCircuits","setAvailableCircuits","isRunning","setIsRunning","wasStopped","setWasStopped","carPosition","setCarPosition","elapsedTime","setElapsedTime","customSpeed","setCustomSpeed","currentSpeed","setCurrentSpeed","completed","setCompleted","sectorTimes","setSectorTimes","intervalRef","carPath","speedPath","indexRef","currentSectorIndexRef","sectorStartTimeRef","elapsedRef","get","then","res","data","path","startLine","carPoints","carSpeeds","sectors","mini_sectors","speed","map","s","name","current","clearInterval","catch","console","error","startSimulation","length","intervalMs","setInterval","i","time","prev","index","stopSimulation","resetSimulation","formatTime","ms","milliseconds","totalSeconds","Math","floor","hours","minutes","seconds","formattedMs","toString","padStart","formattedSeconds","formattedMinutes","formatDistance","meters","toFixed","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","marginBottom","c","onClick","id","disabled","marginRight","type","value","onChange","e","parseInt","target","width","marginLeft","display","flex","alignItems","total_length_m","paddingLeft","fontSize","marginTop","color","st","_sectorNames$i","_c","$RefreshReg$"],"sources":["C:/Users/gerar/Documents/Proyectos/Racing Manager/racingmanagerV1/client/src/App.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\nimport axios from 'axios';\r\nimport { generateCircuitSVG } from './utils/generateCircuitSVG';\r\nimport CircuitSVG from './components/CircuitSVG';\r\n\r\nfunction App() {\r\n  const [circuit, setCircuit] = useState(null);\r\n  const [pathData, setPathData] = useState('');\r\n  const [startMarker, setStartMarker] = useState(null);\r\n  const [sectorStartPoints, setSectorStartPoints] = useState([]);\r\n  const [sectorNames, setSectorNames] = useState([]);\r\n  const [bounds, setBounds] = useState(null);\r\n  const [selectedCircuitId, setSelectedCircuitId] = useState(1);\r\n  const [availableCircuits, setAvailableCircuits] = useState([]);\r\n\r\n  const [isRunning, setIsRunning] = useState(false);\r\n  const [wasStopped, setWasStopped] = useState(false);\r\n  const [carPosition, setCarPosition] = useState(null);\r\n  const [elapsedTime, setElapsedTime] = useState(0);\r\n  const [customSpeed, setCustomSpeed] = useState(100);\r\n  const [currentSpeed, setCurrentSpeed] = useState(0);\r\n  const [completed, setCompleted] = useState(false);\r\n  const [sectorTimes, setSectorTimes] = useState([]);\r\n\r\n  const intervalRef = useRef(null);\r\n  const carPath = useRef([]);\r\n  const speedPath = useRef([]);\r\n  const indexRef = useRef(0);\r\n\r\n  const currentSectorIndexRef = useRef(0);\r\n  const sectorStartTimeRef = useRef(0);\r\n  const elapsedRef = useRef(0); // NUEVO: tiempo real en ms\r\n\r\n  useEffect(() => {\r\n    axios.get(`http://localhost:3001/circuit?id=${selectedCircuitId}`)\r\n      .then(res => {\r\n        setCircuit(res.data);\r\n        const {\r\n          path,\r\n          startLine,\r\n          bounds,\r\n          carPoints,\r\n          carSpeeds,\r\n          sectorStartPoints\r\n        } = generateCircuitSVG(\r\n          res.data.sectors,\r\n          res.data.mini_sectors,\r\n          { speed: customSpeed }\r\n        );\r\n\r\n        setPathData(path);\r\n        setStartMarker(startLine);\r\n        setSectorStartPoints(sectorStartPoints);\r\n        setSectorNames(res.data.sectors.map(s => s.name));\r\n        setBounds(bounds);\r\n\r\n        // Reset estado\r\n        setCarPosition(null);\r\n        setElapsedTime(0);\r\n        elapsedRef.current = 0;\r\n        setCurrentSpeed(0);\r\n        setCompleted(false);\r\n        setIsRunning(false);\r\n        setWasStopped(false);\r\n        setSectorTimes([]);\r\n        indexRef.current = 0;\r\n        currentSectorIndexRef.current = 0;\r\n        sectorStartTimeRef.current = 0;\r\n\r\n        if (intervalRef.current) clearInterval(intervalRef.current);\r\n\r\n        carPath.current = carPoints;\r\n        speedPath.current = carSpeeds;\r\n      })\r\n      .catch(console.error);\r\n  }, [selectedCircuitId, customSpeed]);\r\n\r\n  useEffect(() => {\r\n    axios.get('http://localhost:3001/circuits')\r\n      .then(res => setAvailableCircuits(res.data))\r\n      .catch(console.error);\r\n  }, []);\r\n\r\n  const startSimulation = () => {\r\n    if (!carPath.current.length) return;\r\n\r\n    setIsRunning(true);\r\n    setWasStopped(false);\r\n    setCompleted(false);\r\n\r\n    currentSectorIndexRef.current = 0;\r\n    sectorStartTimeRef.current = 0;\r\n    elapsedRef.current = 0;\r\n\r\n    const intervalMs = 30;\r\n    intervalRef.current = setInterval(() => {\r\n      const i = indexRef.current;\r\n\r\n      if (i >= carPath.current.length) {\r\n        clearInterval(intervalRef.current);\r\n        setIsRunning(false);\r\n        setCompleted(true);\r\n\r\n        // Registrar Ãºltimo sector\r\n        if (currentSectorIndexRef.current < sectorStartPoints.length) {\r\n          const time = elapsedRef.current - sectorStartTimeRef.current;\r\n          setSectorTimes(prev => [\r\n            ...prev,\r\n            {\r\n              index: currentSectorIndexRef.current,\r\n              time\r\n            }\r\n          ]);\r\n        }\r\n\r\n        return;\r\n      }\r\n\r\n      // Actualizar estado\r\n      elapsedRef.current += intervalMs;\r\n      setElapsedTime(elapsedRef.current);\r\n      setCarPosition(carPath.current[i]);\r\n      setCurrentSpeed(speedPath.current[i] || 0);\r\n      indexRef.current += 1;\r\n\r\n      // Ver si entramos a un nuevo sector\r\n      if (\r\n        currentSectorIndexRef.current < sectorStartPoints.length - 1 &&\r\n        i >= sectorStartPoints[currentSectorIndexRef.current + 1].index\r\n      ) {\r\n        const time = elapsedRef.current - sectorStartTimeRef.current;\r\n        setSectorTimes(prev => [\r\n          ...prev,\r\n          {\r\n            index: currentSectorIndexRef.current,\r\n            time\r\n          }\r\n        ]);\r\n\r\n        currentSectorIndexRef.current += 1;\r\n        sectorStartTimeRef.current = elapsedRef.current;\r\n      }\r\n    }, intervalMs);\r\n  };\r\n\r\n  const stopSimulation = () => {\r\n    clearInterval(intervalRef.current);\r\n    setIsRunning(false);\r\n    setWasStopped(true);\r\n  };\r\n\r\n  const resetSimulation = () => {\r\n    clearInterval(intervalRef.current);\r\n    setIsRunning(false);\r\n    setCarPosition(null);\r\n    setElapsedTime(0);\r\n    elapsedRef.current = 0;\r\n    setCurrentSpeed(0);\r\n    setCompleted(false);\r\n    setWasStopped(false);\r\n    setSectorTimes([]);\r\n    indexRef.current = 0;\r\n    currentSectorIndexRef.current = 0;\r\n    sectorStartTimeRef.current = 0;\r\n  };\r\n\r\n  const formatTime = (ms) => {\r\n    const milliseconds = ms % 1000;\r\n    const totalSeconds = Math.floor(ms / 1000);\r\n    const hours = Math.floor(totalSeconds / 3600);\r\n    const minutes = Math.floor((totalSeconds % 3600) / 60);\r\n    const seconds = totalSeconds % 60;\r\n\r\n    const formattedMs = milliseconds.toString().padStart(3, '0');\r\n    const formattedSeconds = seconds.toString().padStart(2, '0');\r\n    const formattedMinutes = minutes.toString().padStart(2, '0');\r\n\r\n    if (hours > 0) {\r\n      return `${hours}:${formattedMinutes}:${formattedSeconds}.${formattedMs}`;\r\n    } else {\r\n      return `${formattedMinutes}:${formattedSeconds}.${formattedMs}`;\r\n    }\r\n  };\r\n\r\n  const formatDistance = (meters) => `${meters.toFixed(0)} m`;\r\n\r\n  return (\r\n    <div style={{ padding: '2rem' }}>\r\n      <h1>Racing Manager V1</h1>\r\n\r\n      <div style={{ marginBottom: '1rem' }}>\r\n        {availableCircuits.map(c => (\r\n          <button\r\n            key={c.id}\r\n            onClick={() => setSelectedCircuitId(c.id)}\r\n            disabled={selectedCircuitId === c.id}\r\n            style={{ marginRight: '0.5rem' }}\r\n          >\r\n            {c.name}\r\n          </button>\r\n        ))}\r\n        <input\r\n          type=\"number\"\r\n          value={customSpeed}\r\n          onChange={(e) => setCustomSpeed(parseInt(e.target.value) || 0)}\r\n          style={{ width: '80px', marginLeft: '1rem' }}\r\n        /> km/h\r\n\r\n        <button onClick={startSimulation} disabled={isRunning} style={{ marginLeft: '1rem' }}>\r\n          Start\r\n        </button>\r\n        <button onClick={startSimulation} disabled={!(wasStopped && !isRunning)} style={{ marginLeft: '0.5rem' }}>\r\n          Resume\r\n        </button>\r\n        <button onClick={stopSimulation} disabled={!isRunning} style={{ marginLeft: '0.5rem' }}>\r\n          Stop\r\n        </button>\r\n        <button onClick={resetSimulation} style={{ marginLeft: '0.5rem' }}>\r\n          Reset\r\n        </button>\r\n      </div>\r\n\r\n      {circuit && (\r\n        <div style={{ display: 'flex' }}>\r\n          <div style={{ flex: 1, display: 'flex', alignItems: 'flex-start' }}>\r\n            <div>\r\n              <h2>\r\n                {circuit.circuit.name}{' '}\r\n                <span>â Longitud total: {formatDistance(circuit.circuit.total_length_m)}</span>\r\n              </h2>\r\n              <CircuitSVG\r\n                pathData={pathData}\r\n                bounds={bounds}\r\n                startLine={startMarker}\r\n                carPosition={carPosition}\r\n                sectorStartPoints={sectorStartPoints}\r\n                carPoints={carPath.current}\r\n              />\r\n            </div>\r\n            <div style={{ paddingLeft: '1rem', fontSize: '0.9rem' }}>\r\n              <h3 style={{ marginTop: 0 }}>Datos</h3>\r\n              {isRunning && (\r\n                <>\r\n                  <p><strong>Tiempo:</strong> {formatTime(elapsedTime)}</p>\r\n                  <p><strong>Velocidad:</strong> {currentSpeed.toFixed(1)} km/h</p>\r\n                  <p><strong>Distancia:</strong> {formatDistance(indexRef.current)}</p>\r\n                </>\r\n              )}\r\n              {completed && (\r\n                <p style={{ color: 'green' }}>\r\n                  <strong>Â¡Vuelta completada en {formatTime(elapsedTime)}!</strong>\r\n                </p>\r\n              )}\r\n              {sectorTimes.length > 0 && (\r\n                <>\r\n                  <h4 style={{ marginTop: '1rem' }}>Tiempos por sector</h4>\r\n                  <ul>\r\n                    {sectorTimes.map((st, i) => (\r\n                      <li key={i}>\r\n                        {sectorNames[i] ?? `Sector ${i + 1}`}: {formatTime(st.time)}\r\n                      </li>\r\n                    ))}\r\n                  </ul>\r\n                </>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}