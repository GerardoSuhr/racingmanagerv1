{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gerar\\\\Documents\\\\Proyectos\\\\Racing Manager\\\\V1\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SCALE = 0.01; // 1 cm = 0.01 px => 1 m = 1 px aprox\n\nfunction App() {\n  _s();\n  const [circuit, setCircuit] = useState(null);\n  const [pathData, setPathData] = useState('');\n  useEffect(() => {\n    axios.get('http://localhost:3001/circuit/1').then(res => {\n      setCircuit(res.data);\n      const path = generateSVGPath(res.data.mini_sectors);\n      setPathData(path);\n    }).catch(console.error);\n  }, []);\n  const generateSVGPath = sectors => {\n    if (!sectors || sectors.length === 0) return '';\n    let x = 300;\n    let y = 200;\n    let angle = 0; // dirección inicial\n    let d = `M ${x} ${y}`;\n    for (let sector of sectors) {\n      const isCurve = sector.curvature_radius_cm > 0;\n      if (!isCurve) {\n        const length = sector.length_cm * SCALE;\n        const dx = Math.cos(angle * Math.PI / 180) * length;\n        const dy = Math.sin(angle * Math.PI / 180) * length;\n        x += dx;\n        y += dy;\n        d += ` L ${x} ${y}`;\n      } else {\n        const radius = sector.curvature_radius_cm * SCALE;\n        const sweepFlag = sector.curve_direction === 'clockwise' ? 1 : 0;\n\n        // La curva será siempre de 180°\n        const largeArcFlag = 0;\n\n        // Punto final del arco\n        const endAngle = angle + (sweepFlag === 1 ? 180 : -180);\n        const endX = x + 2 * radius * Math.cos(endAngle * Math.PI / 180);\n        const endY = y + 2 * radius * Math.sin(endAngle * Math.PI / 180);\n        d += ` A ${radius} ${radius} 0 ${largeArcFlag} ${sweepFlag} ${endX} ${endY}`;\n        x = endX;\n        y = endY;\n        angle = (angle + (sweepFlag === 1 ? 180 : -180)) % 360;\n      }\n    }\n    return d;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '2rem'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Circuit Viewer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), circuit ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: circuit.circuit.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n        width: \"800\",\n        height: \"600\",\n        style: {\n          border: '1px solid black',\n          marginBottom: '1rem'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"path\", {\n          d: pathData,\n          stroke: \"black\",\n          strokeWidth: \"2\",\n          fill: \"none\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Mini Sectores\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: circuit.mini_sectors.map(ms => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: ms.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 17\n          }, this), \": \", ms.length_cm / 100, \" m,\", ms.curvature_radius_cm > 0 ? ` curva (${ms.curve_direction}, radio ${ms.curvature_radius_cm / 100} m)` : ` recta (dirección ${ms.direction}°)`]\n        }, ms.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Sectores\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: circuit.sectors.map(s => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: s.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 17\n          }, this), \": Mini sectores \", s.mini_sector_ids.join(', ')]\n        }, s.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading circuit...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"xJqgAyzJL3QraV4X+Glwt+psjRA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","SCALE","App","_s","circuit","setCircuit","pathData","setPathData","get","then","res","data","path","generateSVGPath","mini_sectors","catch","console","error","sectors","length","x","y","angle","d","sector","isCurve","curvature_radius_cm","length_cm","dx","Math","cos","PI","dy","sin","radius","sweepFlag","curve_direction","largeArcFlag","endAngle","endX","endY","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","name","width","height","border","marginBottom","stroke","strokeWidth","fill","map","ms","direction","id","s","mini_sector_ids","join","_c","$RefreshReg$"],"sources":["C:/Users/gerar/Documents/Proyectos/Racing Manager/V1/frontend/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nconst SCALE = 0.01; // 1 cm = 0.01 px => 1 m = 1 px aprox\n\nfunction App() {\n  const [circuit, setCircuit] = useState(null);\n  const [pathData, setPathData] = useState('');\n\n  useEffect(() => {\n    axios.get('http://localhost:3001/circuit/1')\n      .then(res => {\n        setCircuit(res.data);\n        const path = generateSVGPath(res.data.mini_sectors);\n        setPathData(path);\n      })\n      .catch(console.error);\n  }, []);\n\n  const generateSVGPath = (sectors) => {\n    if (!sectors || sectors.length === 0) return '';\n  \n    let x = 300;\n    let y = 200;\n    let angle = 0; // dirección inicial\n    let d = `M ${x} ${y}`;\n  \n    for (let sector of sectors) {\n      const isCurve = sector.curvature_radius_cm > 0;\n  \n      if (!isCurve) {\n        const length = sector.length_cm * SCALE;\n        const dx = Math.cos(angle * Math.PI / 180) * length;\n        const dy = Math.sin(angle * Math.PI / 180) * length;\n  \n        x += dx;\n        y += dy;\n        d += ` L ${x} ${y}`;\n      } else {\n        const radius = sector.curvature_radius_cm * SCALE;\n        const sweepFlag = sector.curve_direction === 'clockwise' ? 1 : 0;\n  \n        // La curva será siempre de 180°\n        const largeArcFlag = 0;\n  \n        // Punto final del arco\n        const endAngle = angle + (sweepFlag === 1 ? 180 : -180);\n        const endX = x + 2 * radius * Math.cos(endAngle * Math.PI / 180);\n        const endY = y + 2 * radius * Math.sin(endAngle * Math.PI / 180);\n  \n        d += ` A ${radius} ${radius} 0 ${largeArcFlag} ${sweepFlag} ${endX} ${endY}`;\n  \n        x = endX;\n        y = endY;\n        angle = (angle + (sweepFlag === 1 ? 180 : -180)) % 360;\n      }\n    }\n  \n    return d;\n  };\n\n  return (\n    <div style={{ padding: '2rem' }}>\n      <h1>Circuit Viewer</h1>\n\n      {circuit ? (\n        <>\n          <h2>{circuit.circuit.name}</h2>\n          <svg width=\"800\" height=\"600\" style={{ border: '1px solid black', marginBottom: '1rem' }}>\n            <path d={pathData} stroke=\"black\" strokeWidth=\"2\" fill=\"none\" />\n          </svg>\n\n          <h3>Mini Sectores</h3>\n          <ul>\n            {circuit.mini_sectors.map(ms => (\n              <li key={ms.id}>\n                <strong>{ms.name}</strong>: {ms.length_cm / 100} m, \n                {ms.curvature_radius_cm > 0\n                  ? ` curva (${ms.curve_direction}, radio ${ms.curvature_radius_cm / 100} m)`\n                  : ` recta (dirección ${ms.direction}°)`\n                }\n              </li>\n            ))}\n          </ul>\n\n          <h3>Sectores</h3>\n          <ul>\n            {circuit.sectors.map(s => (\n              <li key={s.id}>\n                <strong>{s.name}</strong>: Mini sectores {s.mini_sector_ids.join(', ')}\n              </li>\n            ))}\n          </ul>\n        </>\n      ) : (\n        <p>Loading circuit...</p>\n      )}\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}