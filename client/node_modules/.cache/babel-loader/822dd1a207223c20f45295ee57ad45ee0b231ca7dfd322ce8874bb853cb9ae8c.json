{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gerar\\\\Documents\\\\Proyectos\\\\Racing Manager\\\\V1\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport axios from 'axios';\nimport { generateCircuitSVG } from './utils/generateCircuitSVG';\nimport CircuitSVG from './components/CircuitSVG';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [circuit, setCircuit] = useState(null);\n  const [pathData, setPathData] = useState('');\n  const [startMarker, setStartMarker] = useState(null);\n  const [sectorStartPoints, setSectorStartPoints] = useState([]);\n  const [sectorNames, setSectorNames] = useState([]);\n  const [bounds, setBounds] = useState(null);\n  const [selectedCircuitId, setSelectedCircuitId] = useState(1);\n  const [availableCircuits, setAvailableCircuits] = useState([]);\n  const [isRunning, setIsRunning] = useState(false);\n  const [wasStopped, setWasStopped] = useState(false);\n  const [carPosition, setCarPosition] = useState(null);\n  const [elapsedTime, setElapsedTime] = useState(0);\n  const [customSpeed, setCustomSpeed] = useState(100);\n  const [currentSpeed, setCurrentSpeed] = useState(0);\n  const [completed, setCompleted] = useState(false);\n  const [sectorTimes, setSectorTimes] = useState([]);\n  const intervalRef = useRef(null);\n  const carPath = useRef([]);\n  const speedPath = useRef([]);\n  const indexRef = useRef(0);\n  const currentSectorIndexRef = useRef(0);\n  const sectorStartTimeRef = useRef(0);\n  useEffect(() => {\n    axios.get(`http://localhost:3001/circuit?id=${selectedCircuitId}`).then(res => {\n      setCircuit(res.data);\n      const {\n        path,\n        startLine,\n        bounds,\n        carPoints,\n        carSpeeds,\n        sectorStartPoints\n      } = generateCircuitSVG(res.data.sectors, res.data.mini_sectors, {\n        speed: customSpeed\n      });\n      setPathData(path);\n      setStartMarker(startLine);\n      setSectorStartPoints(sectorStartPoints);\n      setSectorNames(res.data.sectors.map(s => s.name));\n      setBounds(bounds);\n      setCarPosition(null);\n      setElapsedTime(0);\n      setCurrentSpeed(0);\n      setCompleted(false);\n      setIsRunning(false);\n      setWasStopped(false);\n      setSectorTimes([]);\n      indexRef.current = 0;\n      currentSectorIndexRef.current = 0;\n      sectorStartTimeRef.current = 0;\n      if (intervalRef.current) clearInterval(intervalRef.current);\n      carPath.current = carPoints;\n      speedPath.current = carSpeeds;\n    }).catch(console.error);\n  }, [selectedCircuitId, customSpeed]);\n  useEffect(() => {\n    axios.get('http://localhost:3001/circuits').then(res => setAvailableCircuits(res.data)).catch(console.error);\n  }, []);\n  const startSimulation = () => {\n    if (!carPath.current.length) return;\n    setIsRunning(true);\n    setWasStopped(false);\n    setCompleted(false);\n    currentSectorIndexRef.current = 0;\n    sectorStartTimeRef.current = 0;\n    const intervalMs = 30;\n    intervalRef.current = setInterval(() => {\n      const i = indexRef.current;\n      if (i >= carPath.current.length) {\n        clearInterval(intervalRef.current);\n        setIsRunning(false);\n        setCompleted(true);\n        if (currentSectorIndexRef.current < sectorStartPoints.length) {\n          const time = elapsedTime - sectorStartTimeRef.current;\n          setSectorTimes(prev => [...prev, {\n            index: currentSectorIndexRef.current,\n            time\n          }]);\n        }\n        return;\n      }\n      setCarPosition(carPath.current[i]);\n      setCurrentSpeed(speedPath.current[i] || 0);\n      setElapsedTime(prev => prev + intervalMs);\n      indexRef.current += 1;\n\n      // Detectar paso a siguiente sector\n      if (currentSectorIndexRef.current < sectorStartPoints.length - 1 && i >= sectorStartPoints[currentSectorIndexRef.current + 1].index) {\n        const time = elapsedTime - sectorStartTimeRef.current;\n        setSectorTimes(prev => [...prev, {\n          index: currentSectorIndexRef.current,\n          time\n        }]);\n        currentSectorIndexRef.current += 1;\n        sectorStartTimeRef.current = elapsedTime;\n      }\n    }, intervalMs);\n  };\n  const stopSimulation = () => {\n    clearInterval(intervalRef.current);\n    setIsRunning(false);\n    setWasStopped(true);\n  };\n  const resetSimulation = () => {\n    clearInterval(intervalRef.current);\n    setIsRunning(false);\n    setCarPosition(null);\n    setElapsedTime(0);\n    setCurrentSpeed(0);\n    setCompleted(false);\n    setWasStopped(false);\n    setSectorTimes([]);\n    indexRef.current = 0;\n    currentSectorIndexRef.current = 0;\n    sectorStartTimeRef.current = 0;\n  };\n  const formatTime = ms => {\n    const milliseconds = ms % 1000;\n    const totalSeconds = Math.floor(ms / 1000);\n    const hours = Math.floor(totalSeconds / 3600);\n    const minutes = Math.floor(totalSeconds % 3600 / 60);\n    const seconds = totalSeconds % 60;\n    const formattedMs = milliseconds.toString().padStart(3, '0');\n    const formattedSeconds = seconds.toString().padStart(2, '0');\n    const formattedMinutes = minutes.toString().padStart(2, '0');\n    if (hours > 0) {\n      return `${hours}:${formattedMinutes}:${formattedSeconds}.${formattedMs}`;\n    } else {\n      return `${formattedMinutes}:${formattedSeconds}.${formattedMs}`;\n    }\n  };\n  const formatDistance = meters => `${meters.toFixed(0)} m`;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '2rem'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Circuit Viewer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '1rem'\n      },\n      children: [availableCircuits.map(c => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setSelectedCircuitId(c.id),\n        disabled: selectedCircuitId === c.id,\n        style: {\n          marginRight: '0.5rem'\n        },\n        children: c.name\n      }, c.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: customSpeed,\n        onChange: e => setCustomSpeed(parseInt(e.target.value) || 0),\n        style: {\n          width: '80px',\n          marginLeft: '1rem'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this), \" km/h\", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startSimulation,\n        disabled: isRunning,\n        style: {\n          marginLeft: '1rem'\n        },\n        children: \"Start\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startSimulation,\n        disabled: !(wasStopped && !isRunning),\n        style: {\n          marginLeft: '0.5rem'\n        },\n        children: \"Resume\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: stopSimulation,\n        disabled: !isRunning,\n        style: {\n          marginLeft: '0.5rem'\n        },\n        children: \"Stop\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: resetSimulation,\n        style: {\n          marginLeft: '0.5rem'\n        },\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this), circuit && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flex: 1,\n          display: 'flex',\n          alignItems: 'flex-start'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [circuit.circuit.name, ' ', /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"\\u2014 Longitud total: \", formatDistance(circuit.circuit.total_length_m)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(CircuitSVG, {\n            pathData: pathData,\n            bounds: bounds,\n            startLine: startMarker,\n            carPosition: carPosition,\n            sectorStartPoints: sectorStartPoints,\n            carPoints: carPath.current\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            paddingLeft: '1rem',\n            fontSize: '0.9rem'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            style: {\n              marginTop: 0\n            },\n            children: \"Datos\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 15\n          }, this), isRunning && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Tiempo:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 233,\n                columnNumber: 22\n              }, this), \" \", formatTime(elapsedTime)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Velocidad:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 22\n              }, this), \" \", currentSpeed.toFixed(1), \" km/h\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Distancia:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 235,\n                columnNumber: 22\n              }, this), \" \", formatDistance(indexRef.current)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true), completed && /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              color: 'green'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [\"\\xA1Vuelta completada en \", formatTime(elapsedTime), \"!\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 17\n          }, this), sectorTimes.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              style: {\n                marginTop: '1rem'\n              },\n              children: \"Tiempos por sector\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: sectorTimes.map((st, i) => {\n                var _sectorNames$i;\n                return /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: [(_sectorNames$i = sectorNames[i]) !== null && _sectorNames$i !== void 0 ? _sectorNames$i : `Sector ${i + 1}`, \": \", formatTime(st.time)]\n                }, i, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 248,\n                  columnNumber: 23\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 177,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"aXNnwFZkg25zLHvM0MhEgh1sRAQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","useRef","axios","generateCircuitSVG","CircuitSVG","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","circuit","setCircuit","pathData","setPathData","startMarker","setStartMarker","sectorStartPoints","setSectorStartPoints","sectorNames","setSectorNames","bounds","setBounds","selectedCircuitId","setSelectedCircuitId","availableCircuits","setAvailableCircuits","isRunning","setIsRunning","wasStopped","setWasStopped","carPosition","setCarPosition","elapsedTime","setElapsedTime","customSpeed","setCustomSpeed","currentSpeed","setCurrentSpeed","completed","setCompleted","sectorTimes","setSectorTimes","intervalRef","carPath","speedPath","indexRef","currentSectorIndexRef","sectorStartTimeRef","get","then","res","data","path","startLine","carPoints","carSpeeds","sectors","mini_sectors","speed","map","s","name","current","clearInterval","catch","console","error","startSimulation","length","intervalMs","setInterval","i","time","prev","index","stopSimulation","resetSimulation","formatTime","ms","milliseconds","totalSeconds","Math","floor","hours","minutes","seconds","formattedMs","toString","padStart","formattedSeconds","formattedMinutes","formatDistance","meters","toFixed","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","marginBottom","c","onClick","id","disabled","marginRight","type","value","onChange","e","parseInt","target","width","marginLeft","display","flex","alignItems","total_length_m","paddingLeft","fontSize","marginTop","color","st","_sectorNames$i","_c","$RefreshReg$"],"sources":["C:/Users/gerar/Documents/Proyectos/Racing Manager/V1/frontend/src/App.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\nimport axios from 'axios';\nimport { generateCircuitSVG } from './utils/generateCircuitSVG';\nimport CircuitSVG from './components/CircuitSVG';\n\nfunction App() {\n  const [circuit, setCircuit] = useState(null);\n  const [pathData, setPathData] = useState('');\n  const [startMarker, setStartMarker] = useState(null);\n  const [sectorStartPoints, setSectorStartPoints] = useState([]);\n  const [sectorNames, setSectorNames] = useState([]);\n  const [bounds, setBounds] = useState(null);\n  const [selectedCircuitId, setSelectedCircuitId] = useState(1);\n  const [availableCircuits, setAvailableCircuits] = useState([]);\n\n  const [isRunning, setIsRunning] = useState(false);\n  const [wasStopped, setWasStopped] = useState(false);\n  const [carPosition, setCarPosition] = useState(null);\n  const [elapsedTime, setElapsedTime] = useState(0);\n  const [customSpeed, setCustomSpeed] = useState(100);\n  const [currentSpeed, setCurrentSpeed] = useState(0);\n  const [completed, setCompleted] = useState(false);\n  const [sectorTimes, setSectorTimes] = useState([]);\n  const intervalRef = useRef(null);\n  const carPath = useRef([]);\n  const speedPath = useRef([]);\n  const indexRef = useRef(0);\n\n  const currentSectorIndexRef = useRef(0);\n  const sectorStartTimeRef = useRef(0);\n\n  useEffect(() => {\n    axios.get(`http://localhost:3001/circuit?id=${selectedCircuitId}`)\n      .then(res => {\n        setCircuit(res.data);\n        const {\n          path,\n          startLine,\n          bounds,\n          carPoints,\n          carSpeeds,\n          sectorStartPoints\n        } = generateCircuitSVG(\n          res.data.sectors,\n          res.data.mini_sectors,\n          { speed: customSpeed }\n        );\n\n        setPathData(path);\n        setStartMarker(startLine);\n        setSectorStartPoints(sectorStartPoints);\n        setSectorNames(res.data.sectors.map(s => s.name));\n        setBounds(bounds);\n\n        setCarPosition(null);\n        setElapsedTime(0);\n        setCurrentSpeed(0);\n        setCompleted(false);\n        setIsRunning(false);\n        setWasStopped(false);\n        setSectorTimes([]);\n        indexRef.current = 0;\n        currentSectorIndexRef.current = 0;\n        sectorStartTimeRef.current = 0;\n\n        if (intervalRef.current) clearInterval(intervalRef.current);\n\n        carPath.current = carPoints;\n        speedPath.current = carSpeeds;\n      })\n      .catch(console.error);\n  }, [selectedCircuitId, customSpeed]);\n\n  useEffect(() => {\n    axios.get('http://localhost:3001/circuits')\n      .then(res => setAvailableCircuits(res.data))\n      .catch(console.error);\n  }, []);\n\n  const startSimulation = () => {\n    if (!carPath.current.length) return;\n\n    setIsRunning(true);\n    setWasStopped(false);\n    setCompleted(false);\n\n    currentSectorIndexRef.current = 0;\n    sectorStartTimeRef.current = 0;\n\n    const intervalMs = 30;\n    intervalRef.current = setInterval(() => {\n      const i = indexRef.current;\n      if (i >= carPath.current.length) {\n        clearInterval(intervalRef.current);\n        setIsRunning(false);\n        setCompleted(true);\n\n        if (currentSectorIndexRef.current < sectorStartPoints.length) {\n          const time = elapsedTime - sectorStartTimeRef.current;\n          setSectorTimes(prev => [\n            ...prev,\n            {\n              index: currentSectorIndexRef.current,\n              time\n            }\n          ]);\n        }\n\n        return;\n      }\n\n      setCarPosition(carPath.current[i]);\n      setCurrentSpeed(speedPath.current[i] || 0);\n      setElapsedTime(prev => prev + intervalMs);\n      indexRef.current += 1;\n\n      // Detectar paso a siguiente sector\n      if (\n        currentSectorIndexRef.current < sectorStartPoints.length - 1 &&\n        i >= sectorStartPoints[currentSectorIndexRef.current + 1].index\n      ) {\n        const time = elapsedTime - sectorStartTimeRef.current;\n        setSectorTimes(prev => [\n          ...prev,\n          {\n            index: currentSectorIndexRef.current,\n            time\n          }\n        ]);\n        currentSectorIndexRef.current += 1;\n        sectorStartTimeRef.current = elapsedTime;\n      }\n    }, intervalMs);\n  };\n\n  const stopSimulation = () => {\n    clearInterval(intervalRef.current);\n    setIsRunning(false);\n    setWasStopped(true);\n  };\n\n  const resetSimulation = () => {\n    clearInterval(intervalRef.current);\n    setIsRunning(false);\n    setCarPosition(null);\n    setElapsedTime(0);\n    setCurrentSpeed(0);\n    setCompleted(false);\n    setWasStopped(false);\n    setSectorTimes([]);\n    indexRef.current = 0;\n    currentSectorIndexRef.current = 0;\n    sectorStartTimeRef.current = 0;\n  };\n\n  const formatTime = (ms) => {\n    const milliseconds = ms % 1000;\n    const totalSeconds = Math.floor(ms / 1000);\n    const hours = Math.floor(totalSeconds / 3600);\n    const minutes = Math.floor((totalSeconds % 3600) / 60);\n    const seconds = totalSeconds % 60;\n\n    const formattedMs = milliseconds.toString().padStart(3, '0');\n    const formattedSeconds = seconds.toString().padStart(2, '0');\n    const formattedMinutes = minutes.toString().padStart(2, '0');\n\n    if (hours > 0) {\n      return `${hours}:${formattedMinutes}:${formattedSeconds}.${formattedMs}`;\n    } else {\n      return `${formattedMinutes}:${formattedSeconds}.${formattedMs}`;\n    }\n  };\n\n  const formatDistance = (meters) => `${meters.toFixed(0)} m`;\n\n  return (\n    <div style={{ padding: '2rem' }}>\n      <h1>Circuit Viewer</h1>\n\n      <div style={{ marginBottom: '1rem' }}>\n        {availableCircuits.map(c => (\n          <button\n            key={c.id}\n            onClick={() => setSelectedCircuitId(c.id)}\n            disabled={selectedCircuitId === c.id}\n            style={{ marginRight: '0.5rem' }}\n          >\n            {c.name}\n          </button>\n        ))}\n        <input\n          type=\"number\"\n          value={customSpeed}\n          onChange={(e) => setCustomSpeed(parseInt(e.target.value) || 0)}\n          style={{ width: '80px', marginLeft: '1rem' }}\n        /> km/h\n\n        <button onClick={startSimulation} disabled={isRunning} style={{ marginLeft: '1rem' }}>\n          Start\n        </button>\n        <button onClick={startSimulation} disabled={!(wasStopped && !isRunning)} style={{ marginLeft: '0.5rem' }}>\n          Resume\n        </button>\n        <button onClick={stopSimulation} disabled={!isRunning} style={{ marginLeft: '0.5rem' }}>\n          Stop\n        </button>\n        <button onClick={resetSimulation} style={{ marginLeft: '0.5rem' }}>\n          Reset\n        </button>\n      </div>\n\n      {circuit && (\n        <div style={{ display: 'flex' }}>\n          <div style={{ flex: 1, display: 'flex', alignItems: 'flex-start' }}>\n            <div>\n              <h2>\n                {circuit.circuit.name}{' '}\n                <span>— Longitud total: {formatDistance(circuit.circuit.total_length_m)}</span>\n              </h2>\n              <CircuitSVG\n                pathData={pathData}\n                bounds={bounds}\n                startLine={startMarker}\n                carPosition={carPosition}\n                sectorStartPoints={sectorStartPoints}\n                carPoints={carPath.current}\n              />\n            </div>\n            <div style={{ paddingLeft: '1rem', fontSize: '0.9rem' }}>\n              <h3 style={{ marginTop: 0 }}>Datos</h3>\n              {isRunning && (\n                <>\n                  <p><strong>Tiempo:</strong> {formatTime(elapsedTime)}</p>\n                  <p><strong>Velocidad:</strong> {currentSpeed.toFixed(1)} km/h</p>\n                  <p><strong>Distancia:</strong> {formatDistance(indexRef.current)}</p>\n                </>\n              )}\n              {completed && (\n                <p style={{ color: 'green' }}>\n                  <strong>¡Vuelta completada en {formatTime(elapsedTime)}!</strong>\n                </p>\n              )}\n              {sectorTimes.length > 0 && (\n                <>\n                  <h4 style={{ marginTop: '1rem' }}>Tiempos por sector</h4>\n                  <ul>\n                    {sectorTimes.map((st, i) => (\n                      <li key={i}>\n                        {sectorNames[i] ?? `Sector ${i + 1}`}: {formatTime(st.time)}\n                      </li>\n                    ))}\n                  </ul>\n                </>\n              )}\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}