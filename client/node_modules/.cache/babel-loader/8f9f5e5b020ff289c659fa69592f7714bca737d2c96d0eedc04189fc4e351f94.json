{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gerar\\\\Documents\\\\Proyectos\\\\Racing Manager\\\\V1\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SCALE = 0.01; // 1 cm = 0.01 px => 1 m = 1 px aprox\n\nfunction App() {\n  _s();\n  const [circuit, setCircuit] = useState(null);\n  const [pathData, setPathData] = useState('');\n  useEffect(() => {\n    axios.get('http://localhost:3001/circuit/1').then(res => {\n      setCircuit(res.data);\n      const path = generateSVGPath(res.data.mini_sectors);\n      setPathData(path);\n    }).catch(console.error);\n  }, []);\n  const generateSVGPath = sectors => {\n    if (!sectors || sectors.length === 0) return '';\n    let x = 300;\n    let y = 200;\n    let angle = 0; // dirección en grados, inicialmente 0 (hacia la derecha)\n    let d = `M ${x} ${y}`;\n    for (let sector of sectors) {\n      const isCurve = sector.curvature_radius_cm > 0;\n      if (!isCurve) {\n        var _sector$direction;\n        const length = sector.length_cm * SCALE;\n        const direction = (_sector$direction = sector.direction) !== null && _sector$direction !== void 0 ? _sector$direction : angle;\n        const dx = Math.cos(direction * Math.PI / 180) * length;\n        const dy = Math.sin(direction * Math.PI / 180) * length;\n        x += dx;\n        y += dy;\n        d += ` L ${x} ${y}`;\n        angle = direction;\n      } else {\n        const radius = sector.curvature_radius_cm * SCALE;\n        const sweepFlag = sector.curve_direction === 'clockwise' ? 1 : 0;\n\n        // Angulo inicial → radianes\n        const startAngleRad = angle * Math.PI / 180;\n        const endAngleRad = startAngleRad + (sweepFlag === 1 ? Math.PI : -Math.PI);\n\n        // Centro de la circunferencia\n        const cx = x + Math.cos(startAngleRad + (sweepFlag === 1 ? Math.PI / 2 : -Math.PI / 2)) * radius;\n        const cy = y + Math.sin(startAngleRad + (sweepFlag === 1 ? Math.PI / 2 : -Math.PI / 2)) * radius;\n\n        // Punto final del arco\n        const x1 = cx + Math.cos(endAngleRad - (sweepFlag === 1 ? Math.PI / 2 : -Math.PI / 2)) * radius;\n        const y1 = cy + Math.sin(endAngleRad - (sweepFlag === 1 ? Math.PI / 2 : -Math.PI / 2)) * radius;\n        d += ` A ${radius} ${radius} 0 0 ${sweepFlag} ${x1} ${y1}`;\n        x = x1;\n        y = y1;\n        angle += sweepFlag === 1 ? 180 : -180;\n        angle %= 360;\n      }\n    }\n    return d;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '2rem'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Circuit Viewer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), circuit ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: circuit.circuit.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n        width: \"800\",\n        height: \"600\",\n        style: {\n          border: '1px solid black',\n          marginBottom: '1rem'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"path\", {\n          d: pathData,\n          stroke: \"black\",\n          strokeWidth: \"2\",\n          fill: \"none\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Mini Sectores\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: circuit.mini_sectors.map(ms => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: ms.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 17\n          }, this), \": \", ms.length_cm / 100, \" m,\", ms.curvature_radius_cm > 0 ? ` curva (${ms.curve_direction}, radio ${ms.curvature_radius_cm / 100} m)` : ` recta (dirección ${ms.direction}°)`]\n        }, ms.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Sectores\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: circuit.sectors.map(s => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: s.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 17\n          }, this), \": Mini sectores \", s.mini_sector_ids.join(', ')]\n        }, s.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading circuit...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"xJqgAyzJL3QraV4X+Glwt+psjRA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","SCALE","App","_s","circuit","setCircuit","pathData","setPathData","get","then","res","data","path","generateSVGPath","mini_sectors","catch","console","error","sectors","length","x","y","angle","d","sector","isCurve","curvature_radius_cm","_sector$direction","length_cm","direction","dx","Math","cos","PI","dy","sin","radius","sweepFlag","curve_direction","startAngleRad","endAngleRad","cx","cy","x1","y1","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","name","width","height","border","marginBottom","stroke","strokeWidth","fill","map","ms","id","s","mini_sector_ids","join","_c","$RefreshReg$"],"sources":["C:/Users/gerar/Documents/Proyectos/Racing Manager/V1/frontend/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nconst SCALE = 0.01; // 1 cm = 0.01 px => 1 m = 1 px aprox\n\nfunction App() {\n  const [circuit, setCircuit] = useState(null);\n  const [pathData, setPathData] = useState('');\n\n  useEffect(() => {\n    axios.get('http://localhost:3001/circuit/1')\n      .then(res => {\n        setCircuit(res.data);\n        const path = generateSVGPath(res.data.mini_sectors);\n        setPathData(path);\n      })\n      .catch(console.error);\n  }, []);\n\n  const generateSVGPath = (sectors) => {\n    if (!sectors || sectors.length === 0) return '';\n  \n    let x = 300;\n    let y = 200;\n    let angle = 0; // dirección en grados, inicialmente 0 (hacia la derecha)\n    let d = `M ${x} ${y}`;\n  \n    for (let sector of sectors) {\n      const isCurve = sector.curvature_radius_cm > 0;\n  \n      if (!isCurve) {\n        const length = sector.length_cm * SCALE;\n        const direction = sector.direction ?? angle;\n        const dx = Math.cos(direction * Math.PI / 180) * length;\n        const dy = Math.sin(direction * Math.PI / 180) * length;\n  \n        x += dx;\n        y += dy;\n        d += ` L ${x} ${y}`;\n        angle = direction;\n      } else {\n        const radius = sector.curvature_radius_cm * SCALE;\n        const sweepFlag = sector.curve_direction === 'clockwise' ? 1 : 0;\n  \n        // Angulo inicial → radianes\n        const startAngleRad = angle * Math.PI / 180;\n        const endAngleRad = startAngleRad + (sweepFlag === 1 ? Math.PI : -Math.PI);\n  \n        // Centro de la circunferencia\n        const cx = x + Math.cos(startAngleRad + (sweepFlag === 1 ? Math.PI / 2 : -Math.PI / 2)) * radius;\n        const cy = y + Math.sin(startAngleRad + (sweepFlag === 1 ? Math.PI / 2 : -Math.PI / 2)) * radius;\n  \n        // Punto final del arco\n        const x1 = cx + Math.cos(endAngleRad - (sweepFlag === 1 ? Math.PI / 2 : -Math.PI / 2)) * radius;\n        const y1 = cy + Math.sin(endAngleRad - (sweepFlag === 1 ? Math.PI / 2 : -Math.PI / 2)) * radius;\n  \n        d += ` A ${radius} ${radius} 0 0 ${sweepFlag} ${x1} ${y1}`;\n  \n        x = x1;\n        y = y1;\n  \n        angle += sweepFlag === 1 ? 180 : -180;\n        angle %= 360;\n      }\n    }\n  \n    return d;\n  };\n\n  return (\n    <div style={{ padding: '2rem' }}>\n      <h1>Circuit Viewer</h1>\n\n      {circuit ? (\n        <>\n          <h2>{circuit.circuit.name}</h2>\n          <svg width=\"800\" height=\"600\" style={{ border: '1px solid black', marginBottom: '1rem' }}>\n            <path d={pathData} stroke=\"black\" strokeWidth=\"2\" fill=\"none\" />\n          </svg>\n\n          <h3>Mini Sectores</h3>\n          <ul>\n            {circuit.mini_sectors.map(ms => (\n              <li key={ms.id}>\n                <strong>{ms.name}</strong>: {ms.length_cm / 100} m, \n                {ms.curvature_radius_cm > 0\n                  ? ` curva (${ms.curve_direction}, radio ${ms.curvature_radius_cm / 100} m)`\n                  : ` recta (dirección ${ms.direction}°)`\n                }\n              </li>\n            ))}\n          </ul>\n\n          <h3>Sectores</h3>\n          <ul>\n            {circuit.sectors.map(s => (\n              <li key={s.id}>\n                <strong>{s.name}</strong>: Mini sectores {s.mini_sector_ids.join(', ')}\n              </li>\n            ))}\n          </ul>\n        </>\n      ) : (\n        <p>Loading circuit...</p>\n      )}\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}