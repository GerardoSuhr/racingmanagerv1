{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gerar\\\\Documents\\\\Proyectos\\\\Racing Manager\\\\V1\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// src/App.js\nimport React, { useEffect, useState, useRef } from 'react';\nimport axios from 'axios';\nimport { generateCircuitSVG } from './utils/generateCircuitSVG';\nimport CircuitSVG from './components/CircuitSVG';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [circuit, setCircuit] = useState(null);\n  const [pathData, setPathData] = useState('');\n  const [startMarker, setStartMarker] = useState(null);\n  const [debugPoints, setDebugPoints] = useState([]);\n  const [bounds, setBounds] = useState(null);\n  const [selectedCircuitId, setSelectedCircuitId] = useState(1);\n  const [availableCircuits, setAvailableCircuits] = useState([]);\n  const [isRunning, setIsRunning] = useState(false);\n  const [carPosition, setCarPosition] = useState(null);\n  const [elapsedTime, setElapsedTime] = useState(0);\n  const [customSpeed, setCustomSpeed] = useState(100);\n  const [currentSpeed, setCurrentSpeed] = useState(0);\n  const [completed, setCompleted] = useState(false);\n  const intervalRef = useRef(null);\n  const carPath = useRef([]);\n  const speedPath = useRef([]);\n  const indexRef = useRef(0);\n  const totalLengthRef = useRef(0);\n  const [lengthReady, setLengthReady] = useState(false);\n  useEffect(() => {\n    axios.get(`http://localhost:3001/circuits/${selectedCircuitId}`).then(res => {\n      setCircuit(res.data);\n      const {\n        path,\n        startLine,\n        debugPoints,\n        bounds,\n        carPoints,\n        carSpeeds\n      } = generateCircuitSVG(res.data.sectors, res.data.mini_sectors, {\n        speed: customSpeed\n      });\n      setPathData(path);\n      setStartMarker(startLine);\n      setDebugPoints(debugPoints);\n      setBounds(bounds);\n      setCarPosition(null);\n      setElapsedTime(0);\n      setIsRunning(false);\n      setCompleted(false);\n      setLengthReady(true);\n      indexRef.current = 0;\n      if (intervalRef.current) clearInterval(intervalRef.current);\n      carPath.current = carPoints;\n      speedPath.current = carSpeeds;\n      totalLengthRef.current = carPoints.length;\n    }).catch(console.error);\n  }, [selectedCircuitId, customSpeed]);\n  useEffect(() => {\n    axios.get('http://localhost:3001/circuits').then(res => setAvailableCircuits(res.data)).catch(console.error);\n  }, []);\n  const startSimulation = () => {\n    if (!carPath.current.length) return;\n    setIsRunning(true);\n    setCompleted(false);\n    const intervalMs = 30;\n    intervalRef.current = setInterval(() => {\n      const i = indexRef.current;\n      if (i >= carPath.current.length) {\n        clearInterval(intervalRef.current);\n        setIsRunning(false);\n        setCompleted(true);\n        return;\n      }\n      setCarPosition(carPath.current[i]);\n      setCurrentSpeed(speedPath.current[i] || 0);\n      setElapsedTime(prev => prev + intervalMs);\n      indexRef.current += 1;\n    }, intervalMs);\n  };\n  const stopSimulation = () => {\n    clearInterval(intervalRef.current);\n    setIsRunning(false);\n  };\n  const resetSimulation = () => {\n    clearInterval(intervalRef.current);\n    setIsRunning(false);\n    setElapsedTime(0);\n    setCarPosition(null);\n    setCompleted(false);\n    indexRef.current = 0;\n  };\n  const formatTime = ms => {\n    const totalSeconds = Math.floor(ms / 1000);\n    const hours = Math.floor(totalSeconds / 3600);\n    const minutes = Math.floor(totalSeconds % 3600 / 60);\n    const seconds = totalSeconds % 60;\n    return hours > 0 ? `${hours.toString().padStart(2, '0')}:${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}` : `${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`;\n  };\n  const formatDistance = steps => `${steps.toFixed(0)} m`;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '2rem'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Circuit Viewer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '1rem'\n      },\n      children: [availableCircuits.map(c => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setSelectedCircuitId(c.id),\n        disabled: selectedCircuitId === c.id,\n        style: {\n          marginRight: '0.5rem'\n        },\n        children: c.name\n      }, c.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: customSpeed,\n        onChange: e => setCustomSpeed(parseInt(e.target.value) || 0),\n        style: {\n          width: '80px',\n          marginLeft: '1rem'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), \" km/h\", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startSimulation,\n        style: {\n          marginLeft: '1rem'\n        },\n        children: isRunning ? 'Resume' : 'Start'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: stopSimulation,\n        disabled: !isRunning,\n        style: {\n          marginLeft: '0.5rem'\n        },\n        children: \"Stop\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: resetSimulation,\n        style: {\n          marginLeft: '0.5rem'\n        },\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), circuit && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flex: 1,\n          display: 'flex',\n          alignItems: 'flex-start'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [circuit.circuit.name, ' ', lengthReady && /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"\\u2014 Longitud total: \", formatDistance(carPath.current.length)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(CircuitSVG, {\n            pathData: pathData,\n            bounds: bounds,\n            startLine: startMarker,\n            debugPoints: debugPoints,\n            carPosition: carPosition\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            paddingLeft: '1rem',\n            fontSize: '0.9rem'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            style: {\n              marginTop: 0\n            },\n            children: \"Datos\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 15\n          }, this), isRunning && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Tiempo:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 22\n              }, this), \" \", formatTime(elapsedTime)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Velocidad:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 22\n              }, this), \" \", currentSpeed.toFixed(1), \" km/h\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Distancia:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 22\n              }, this), \" \", formatDistance(indexRef.current)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true), completed && /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              color: 'green'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [\"\\xA1Vuelta completada en \", formatTime(elapsedTime), \"!\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 47\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"A+tRmtmL2E+SVuhUJHmnjFWNfJ0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","useRef","axios","generateCircuitSVG","CircuitSVG","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","circuit","setCircuit","pathData","setPathData","startMarker","setStartMarker","debugPoints","setDebugPoints","bounds","setBounds","selectedCircuitId","setSelectedCircuitId","availableCircuits","setAvailableCircuits","isRunning","setIsRunning","carPosition","setCarPosition","elapsedTime","setElapsedTime","customSpeed","setCustomSpeed","currentSpeed","setCurrentSpeed","completed","setCompleted","intervalRef","carPath","speedPath","indexRef","totalLengthRef","lengthReady","setLengthReady","get","then","res","data","path","startLine","carPoints","carSpeeds","sectors","mini_sectors","speed","current","clearInterval","length","catch","console","error","startSimulation","intervalMs","setInterval","i","prev","stopSimulation","resetSimulation","formatTime","ms","totalSeconds","Math","floor","hours","minutes","seconds","toString","padStart","formatDistance","steps","toFixed","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","marginBottom","map","c","onClick","id","disabled","marginRight","name","type","value","onChange","e","parseInt","target","width","marginLeft","display","flex","alignItems","paddingLeft","fontSize","marginTop","color","_c","$RefreshReg$"],"sources":["C:/Users/gerar/Documents/Proyectos/Racing Manager/V1/frontend/src/App.js"],"sourcesContent":["// src/App.js\nimport React, { useEffect, useState, useRef } from 'react';\nimport axios from 'axios';\nimport { generateCircuitSVG } from './utils/generateCircuitSVG';\nimport CircuitSVG from './components/CircuitSVG';\n\nfunction App() {\n  const [circuit, setCircuit] = useState(null);\n  const [pathData, setPathData] = useState('');\n  const [startMarker, setStartMarker] = useState(null);\n  const [debugPoints, setDebugPoints] = useState([]);\n  const [bounds, setBounds] = useState(null);\n  const [selectedCircuitId, setSelectedCircuitId] = useState(1);\n  const [availableCircuits, setAvailableCircuits] = useState([]);\n\n  const [isRunning, setIsRunning] = useState(false);\n  const [carPosition, setCarPosition] = useState(null);\n  const [elapsedTime, setElapsedTime] = useState(0);\n  const [customSpeed, setCustomSpeed] = useState(100);\n  const [currentSpeed, setCurrentSpeed] = useState(0);\n  const [completed, setCompleted] = useState(false);\n  const intervalRef = useRef(null);\n  const carPath = useRef([]);\n  const speedPath = useRef([]);\n  const indexRef = useRef(0);\n  const totalLengthRef = useRef(0);\n  const [lengthReady, setLengthReady] = useState(false);\n\n  useEffect(() => {\n    axios.get(`http://localhost:3001/circuits/${selectedCircuitId}`)\n      .then(res => {\n        setCircuit(res.data);\n        const { path, startLine, debugPoints, bounds, carPoints, carSpeeds } = generateCircuitSVG(\n          res.data.sectors,\n          res.data.mini_sectors,\n          { speed: customSpeed }\n        );\n        setPathData(path);\n        setStartMarker(startLine);\n        setDebugPoints(debugPoints);\n        setBounds(bounds);\n        setCarPosition(null);\n        setElapsedTime(0);\n        setIsRunning(false);\n        setCompleted(false);\n        setLengthReady(true);\n        indexRef.current = 0;\n        if (intervalRef.current) clearInterval(intervalRef.current);\n\n        carPath.current = carPoints;\n        speedPath.current = carSpeeds;\n        totalLengthRef.current = carPoints.length;\n      })\n      .catch(console.error);\n  }, [selectedCircuitId, customSpeed]);\n\n  useEffect(() => {\n    axios.get('http://localhost:3001/circuits')\n      .then(res => setAvailableCircuits(res.data))\n      .catch(console.error);\n  }, []);\n\n  const startSimulation = () => {\n    if (!carPath.current.length) return;\n\n    setIsRunning(true);\n    setCompleted(false);\n    const intervalMs = 30;\n    intervalRef.current = setInterval(() => {\n      const i = indexRef.current;\n      if (i >= carPath.current.length) {\n        clearInterval(intervalRef.current);\n        setIsRunning(false);\n        setCompleted(true);\n        return;\n      }\n      setCarPosition(carPath.current[i]);\n      setCurrentSpeed(speedPath.current[i] || 0);\n      setElapsedTime(prev => prev + intervalMs);\n      indexRef.current += 1;\n    }, intervalMs);\n  };\n\n  const stopSimulation = () => {\n    clearInterval(intervalRef.current);\n    setIsRunning(false);\n  };\n\n  const resetSimulation = () => {\n    clearInterval(intervalRef.current);\n    setIsRunning(false);\n    setElapsedTime(0);\n    setCarPosition(null);\n    setCompleted(false);\n    indexRef.current = 0;\n  };\n\n  const formatTime = (ms) => {\n    const totalSeconds = Math.floor(ms / 1000);\n    const hours = Math.floor(totalSeconds / 3600);\n    const minutes = Math.floor((totalSeconds % 3600) / 60);\n    const seconds = totalSeconds % 60;\n    return hours > 0\n      ? `${hours.toString().padStart(2, '0')}:${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`\n      : `${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`;\n  };\n\n  const formatDistance = (steps) => `${steps.toFixed(0)} m`;\n\n  return (\n    <div style={{ padding: '2rem' }}>\n      <h1>Circuit Viewer</h1>\n\n      <div style={{ marginBottom: '1rem' }}>\n        {availableCircuits.map(c => (\n          <button\n            key={c.id}\n            onClick={() => setSelectedCircuitId(c.id)}\n            disabled={selectedCircuitId === c.id}\n            style={{ marginRight: '0.5rem' }}\n          >\n            {c.name}\n          </button>\n        ))}\n        <input\n          type=\"number\"\n          value={customSpeed}\n          onChange={(e) => setCustomSpeed(parseInt(e.target.value) || 0)}\n          style={{ width: '80px', marginLeft: '1rem' }}\n        /> km/h\n        <button onClick={startSimulation} style={{ marginLeft: '1rem' }}>\n          {isRunning ? 'Resume' : 'Start'}\n        </button>\n        <button onClick={stopSimulation} disabled={!isRunning} style={{ marginLeft: '0.5rem' }}>\n          Stop\n        </button>\n        <button onClick={resetSimulation} style={{ marginLeft: '0.5rem' }}>\n          Reset\n        </button>\n      </div>\n\n      {circuit && (\n        <div style={{ display: 'flex' }}>\n          <div style={{ flex: 1, display: 'flex', alignItems: 'flex-start' }}>\n            <div>\n              <h2>\n                {circuit.circuit.name}{' '}\n                {lengthReady && (\n                  <span>— Longitud total: {formatDistance(carPath.current.length)}</span>\n                )}\n              </h2>\n              <CircuitSVG\n                pathData={pathData}\n                bounds={bounds}\n                startLine={startMarker}\n                debugPoints={debugPoints}\n                carPosition={carPosition}\n              />\n            </div>\n            <div style={{ paddingLeft: '1rem', fontSize: '0.9rem' }}>\n              <h3 style={{ marginTop: 0 }}>Datos</h3>\n              {isRunning && (\n                <>\n                  <p><strong>Tiempo:</strong> {formatTime(elapsedTime)}</p>\n                  <p><strong>Velocidad:</strong> {currentSpeed.toFixed(1)} km/h</p>\n                  <p><strong>Distancia:</strong> {formatDistance(indexRef.current)}</p>\n                </>\n              )}\n              {completed && (\n                <p style={{ color: 'green' }}><strong>¡Vuelta completada en {formatTime(elapsedTime)}!</strong></p>\n              )}\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}