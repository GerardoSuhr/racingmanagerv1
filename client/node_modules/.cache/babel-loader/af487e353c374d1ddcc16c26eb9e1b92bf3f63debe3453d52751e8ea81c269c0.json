{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gerar\\\\Documents\\\\Proyectos\\\\Racing Manager\\\\V1\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// src/App.js\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { generateCircuitSVG } from './utils/generateCircuitSVG';\nimport CircuitSVG from './components/CircuitSVG';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [circuit, setCircuit] = useState(null);\n  const [pathData, setPathData] = useState('');\n  const [startMarker, setStartMarker] = useState(null);\n  const [debugPoints, setDebugPoints] = useState([]);\n  const [bounds, setBounds] = useState(null);\n  const [selectedCircuitId, setSelectedCircuitId] = useState(1);\n  useEffect(() => {\n    axios.get(`http://localhost:3001/circuit/${selectedCircuitId}`).then(res => {\n      setCircuit(res.data);\n      const {\n        path,\n        startLine,\n        debugPoints,\n        bounds\n      } = generateCircuitSVG(res.data.sectors, res.data.mini_sectors);\n      setPathData(path);\n      setStartMarker(startLine);\n      setDebugPoints(debugPoints);\n      setBounds(bounds);\n    }).catch(console.error);\n  }, [selectedCircuitId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '2rem'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Circuit Viewer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '1rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setSelectedCircuitId(1),\n        disabled: selectedCircuitId === 1,\n        children: \"Circuito 1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setSelectedCircuitId(2),\n        disabled: selectedCircuitId === 2,\n        style: {\n          marginLeft: '1rem'\n        },\n        children: \"Circuito 2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), circuit && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: circuit.circuit.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(CircuitSVG, {\n        pathData: pathData,\n        bounds: bounds,\n        startLine: startMarker,\n        debugPoints: debugPoints\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Mini Sectores\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: circuit.mini_sectors.map(ms => {\n          var _ms$arc_angle_deg;\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: ms.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 17\n            }, this), \": \", ms.length_cm / 100, \" m,\", ' ', ms.curvature_radius_cm > 0 ? `curva (${ms.curve_direction}, radio ${ms.curvature_radius_cm / 100} m, ángulo ${(_ms$arc_angle_deg = ms.arc_angle_deg) !== null && _ms$arc_angle_deg !== void 0 ? _ms$arc_angle_deg : 180}°)` : `recta (dirección ${ms.direction}°)`]\n          }, ms.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Sectores\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: circuit.sectors.map(s => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: s.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 17\n          }, this), \": Mini sectores \", s.mini_sector_ids.join(', ')]\n        }, s.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"f0NOUiToo9QdDNNQa4z1fy3GtsI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","axios","generateCircuitSVG","CircuitSVG","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","circuit","setCircuit","pathData","setPathData","startMarker","setStartMarker","debugPoints","setDebugPoints","bounds","setBounds","selectedCircuitId","setSelectedCircuitId","get","then","res","data","path","startLine","sectors","mini_sectors","catch","console","error","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","marginBottom","onClick","disabled","marginLeft","name","map","ms","_ms$arc_angle_deg","length_cm","curvature_radius_cm","curve_direction","arc_angle_deg","direction","id","s","mini_sector_ids","join","_c","$RefreshReg$"],"sources":["C:/Users/gerar/Documents/Proyectos/Racing Manager/V1/frontend/src/App.js"],"sourcesContent":["// src/App.js\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { generateCircuitSVG } from './utils/generateCircuitSVG';\nimport CircuitSVG from './components/CircuitSVG';\n\nfunction App() {\n  const [circuit, setCircuit] = useState(null);\n  const [pathData, setPathData] = useState('');\n  const [startMarker, setStartMarker] = useState(null);\n  const [debugPoints, setDebugPoints] = useState([]);\n  const [bounds, setBounds] = useState(null);\n  const [selectedCircuitId, setSelectedCircuitId] = useState(1);\n\n  useEffect(() => {\n    axios.get(`http://localhost:3001/circuit/${selectedCircuitId}`)\n      .then(res => {\n        setCircuit(res.data);\n        const { path, startLine, debugPoints, bounds } = generateCircuitSVG(\n          res.data.sectors,\n          res.data.mini_sectors\n        );\n        setPathData(path);\n        setStartMarker(startLine);\n        setDebugPoints(debugPoints);\n        setBounds(bounds);\n      })\n      .catch(console.error);\n  }, [selectedCircuitId]);\n\n  return (\n    <div style={{ padding: '2rem' }}>\n      <h1>Circuit Viewer</h1>\n\n      <div style={{ marginBottom: '1rem' }}>\n        <button onClick={() => setSelectedCircuitId(1)} disabled={selectedCircuitId === 1}>Circuito 1</button>\n        <button onClick={() => setSelectedCircuitId(2)} disabled={selectedCircuitId === 2} style={{ marginLeft: '1rem' }}>Circuito 2</button>\n      </div>\n\n      {circuit && (\n        <>\n          <h2>{circuit.circuit.name}</h2>\n          <CircuitSVG pathData={pathData} bounds={bounds} startLine={startMarker} debugPoints={debugPoints} />\n\n          <h3>Mini Sectores</h3>\n          <ul>\n            {circuit.mini_sectors.map(ms => (\n              <li key={ms.id}>\n                <strong>{ms.name}</strong>: {ms.length_cm / 100} m,{' '}\n                {ms.curvature_radius_cm > 0\n                  ? `curva (${ms.curve_direction}, radio ${ms.curvature_radius_cm / 100} m, ángulo ${ms.arc_angle_deg ?? 180}°)`\n                  : `recta (dirección ${ms.direction}°)`}\n              </li>\n            ))}\n          </ul>\n\n          <h3>Sectores</h3>\n          <ul>\n            {circuit.sectors.map(s => (\n              <li key={s.id}>\n                <strong>{s.name}</strong>: Mini sectores {s.mini_sector_ids.join(', ')}\n              </li>\n            ))}\n          </ul>\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}