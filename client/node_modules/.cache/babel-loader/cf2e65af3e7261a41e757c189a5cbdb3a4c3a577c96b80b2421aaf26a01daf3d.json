{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gerar\\\\Documents\\\\Proyectos\\\\Racing Manager\\\\V1\\\\frontend\\\\src\\\\components\\\\CircuitSVG.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CircuitSVG({\n  pathData,\n  bounds,\n  startLine,\n  carPosition,\n  sectorEndPoints\n}) {\n  const viewWidth = 1000;\n  const viewHeight = 600;\n  const padding = 150;\n  if (!pathData || !bounds) return null;\n  const contentWidth = bounds.width;\n  const contentHeight = bounds.height;\n  const scale = Math.min((viewWidth - 2 * padding) / contentWidth, (viewHeight - 2 * padding) / contentHeight);\n\n  // Función para dibujar línea perpendicular centrada en (x, y)\n  const drawMarkerLine = (x, y, angleDeg, length = 20, stroke = \"black\", width = 4) => {\n    const rad = angleDeg * Math.PI / 180;\n    const dx = length / 2 * Math.cos(rad + Math.PI / 2);\n    const dy = length / 2 * Math.sin(rad + Math.PI / 2);\n    return /*#__PURE__*/_jsxDEV(\"line\", {\n      x1: x - dx,\n      y1: y - dy,\n      x2: x + dx,\n      y2: y + dy,\n      stroke: stroke,\n      strokeWidth: width\n    }, `${x}-${y}-${stroke}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Calcula el ángulo entre dos puntos\n  const angleBetween = (p1, p2) => {\n    const dx = p2.x - p1.x;\n    const dy = p2.y - p1.y;\n    return Math.atan2(dy, dx) * 180 / Math.PI;\n  };\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    width: viewWidth,\n    height: viewHeight,\n    viewBox: `0 0 ${viewWidth} ${viewHeight}`,\n    style: {\n      border: '1px solid #ccc'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"g\", {\n      transform: `translate(${padding}, ${viewHeight - padding}) scale(${scale}, -${scale})`,\n      children: [/*#__PURE__*/_jsxDEV(\"path\", {\n        d: pathData,\n        stroke: \"gray\",\n        strokeWidth: 15,\n        fill: \"none\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), (sectorEndPoints === null || sectorEndPoints === void 0 ? void 0 : sectorEndPoints[0]) && sectorEndPoints.length > 1 && drawMarkerLine(sectorEndPoints[0].x, sectorEndPoints[0].y, angleBetween(sectorEndPoints[0], sectorEndPoints[1]), 40, 'red', 8), sectorEndPoints === null || sectorEndPoints === void 0 ? void 0 : sectorEndPoints.map((p, i, arr) => {\n        if (i === 0 || i === arr.length - 1) return null; // no repitas la roja ni marques el último\n        const prev = arr[i - 1];\n        const angle = angleBetween(prev, p);\n        return drawMarkerLine(p.x, p.y, angle, 20, 'black', 4);\n      }), carPosition && /*#__PURE__*/_jsxDEV(\"circle\", {\n        cx: carPosition.x,\n        cy: carPosition.y,\n        r: \"15\",\n        fill: \"blue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_c = CircuitSVG;\nvar _c;\n$RefreshReg$(_c, \"CircuitSVG\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","CircuitSVG","pathData","bounds","startLine","carPosition","sectorEndPoints","viewWidth","viewHeight","padding","contentWidth","width","contentHeight","height","scale","Math","min","drawMarkerLine","x","y","angleDeg","length","stroke","rad","PI","dx","cos","dy","sin","x1","y1","x2","y2","strokeWidth","fileName","_jsxFileName","lineNumber","columnNumber","angleBetween","p1","p2","atan2","viewBox","style","border","children","transform","d","fill","map","p","i","arr","prev","angle","cx","cy","r","_c","$RefreshReg$"],"sources":["C:/Users/gerar/Documents/Proyectos/Racing Manager/V1/frontend/src/components/CircuitSVG.js"],"sourcesContent":["import React from 'react';\r\n\r\nexport default function CircuitSVG({ pathData, bounds, startLine, carPosition, sectorEndPoints }) {\r\n  const viewWidth = 1000;\r\n  const viewHeight = 600;\r\n  const padding = 150;\r\n\r\n  if (!pathData || !bounds) return null;\r\n\r\n  const contentWidth = bounds.width;\r\n  const contentHeight = bounds.height;\r\n\r\n  const scale = Math.min(\r\n    (viewWidth - 2 * padding) / contentWidth,\r\n    (viewHeight - 2 * padding) / contentHeight\r\n  );\r\n\r\n  // Función para dibujar línea perpendicular centrada en (x, y)\r\n  const drawMarkerLine = (x, y, angleDeg, length = 20, stroke = \"black\", width = 4) => {\r\n    const rad = (angleDeg * Math.PI) / 180;\r\n    const dx = (length / 2) * Math.cos(rad + Math.PI / 2);\r\n    const dy = (length / 2) * Math.sin(rad + Math.PI / 2);\r\n    return (\r\n      <line\r\n        key={`${x}-${y}-${stroke}`}\r\n        x1={x - dx}\r\n        y1={y - dy}\r\n        x2={x + dx}\r\n        y2={y + dy}\r\n        stroke={stroke}\r\n        strokeWidth={width}\r\n      />\r\n    );\r\n  };\r\n\r\n  // Calcula el ángulo entre dos puntos\r\n  const angleBetween = (p1, p2) => {\r\n    const dx = p2.x - p1.x;\r\n    const dy = p2.y - p1.y;\r\n    return (Math.atan2(dy, dx) * 180) / Math.PI;\r\n  };\r\n\r\n  return (\r\n    <svg\r\n      width={viewWidth}\r\n      height={viewHeight}\r\n      viewBox={`0 0 ${viewWidth} ${viewHeight}`}\r\n      style={{ border: '1px solid #ccc' }}\r\n    >\r\n      <g transform={`translate(${padding}, ${viewHeight - padding}) scale(${scale}, -${scale})`}>\r\n        {/* Circuito */}\r\n        <path d={pathData} stroke=\"gray\" strokeWidth={15} fill=\"none\" />\r\n        {/* Línea de meta roja al primer sector */}\r\n{sectorEndPoints?.[0] &&\r\n  sectorEndPoints.length > 1 &&\r\n  drawMarkerLine(\r\n    sectorEndPoints[0].x,\r\n    sectorEndPoints[0].y,\r\n    angleBetween(sectorEndPoints[0], sectorEndPoints[1]),\r\n    40,\r\n    'red',\r\n    8\r\n  )}\r\n\r\n{/* Líneas negras al final de los sectores siguientes */}\r\n{sectorEndPoints?.map((p, i, arr) => {\r\n  if (i === 0 || i === arr.length - 1) return null; // no repitas la roja ni marques el último\r\n  const prev = arr[i - 1];\r\n  const angle = angleBetween(prev, p);\r\n  return drawMarkerLine(p.x, p.y, angle, 20, 'black', 4);\r\n})}\r\n\r\n        {/* Auto */}\r\n        {carPosition && (\r\n          <circle cx={carPosition.x} cy={carPosition.y} r=\"15\" fill=\"blue\" />\r\n        )}\r\n      </g>\r\n    </svg>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}